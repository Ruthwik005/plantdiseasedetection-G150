{"ast":null,"code":"// import React, { useState } from 'react';\n// import { handleSuccess, handleError } from '../utils.js'; // Ensure utils is correctly imported\n// import { Link, useNavigate } from 'react-router-dom';\n// import { ToastContainer } from 'react-toastify';\n// // import { useGoogleLogin } from '@react-oauth/google';\n// import './LogIn.css';\n// // import { googleAuth } from './api';\n\n// function LogIn() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   const loginwithgoole = () =>{\n//     window.open(\"http://localhost:8080/auth/google/callback\" , \"_self\");\n//   }\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const formData = { email, password };\n\n//     try {\n//       const response = await fetch('http://localhost:8080/auth/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(formData),\n//       });\n\n//       const data = await response.json();\n//       const { success, message, token, username,error } = data;\n\n//       if (response.ok && success && token) {\n//         handleSuccess(message);\n//         localStorage.setItem(\"token\", token);\n//         localStorage.setItem(\"loggedInUser\", username);\n\n//         setTimeout(() => {\n//           navigate('/'); // Redirect after successful login\n//         }, 1000);\n//       } else {\n//         setError(error || 'Invalid credentials');\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//       setError('An error occurred. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-page\">\n//       <div className=\"login-container\">\n//         <h1 className=\"login-heading\">Log In</h1>\n//         {error && <p className=\"error-text\" style={{ color: 'red' }}>{error}</p>}\n//         <form className=\"form-container\" onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"email\" className=\"labels\">Email</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               className=\"input\"\n//               placeholder=\"Enter your email\"\n//               required\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               autoFocus\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"password\" className=\"labels\">Password</label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               className=\"input\"\n//               placeholder=\"Enter your password\"\n//               required\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               onBlur={(e) => {\n//                 if (!e.target.value) setError('Password is required');\n//               }}\n//             />\n//           </div>\n//           <div className=\"remember-forgot-container\">\n//             {/* <div>\n//               <input type=\"checkbox\" id=\"remember\" />\n//               <label htmlFor=\"remember\" className=\"remember\"> Remember Me</label>\n//             </div> */}\n//             <Link to=\"/forgot-password\" className=\"forgot\">Forgot Password?</Link>\n//           </div>\n//           <button type=\"submit\" className=\"log-in-btn\">Log In</button>\n//           <div className=\"social-container\">\n//             <button type=\"button\" className=\"social-btn\" onClick = {loginwithgoole}>\n//               <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6WwgH7Nl5_AW9nDCnR2Ozb_AU3rkIbSJdAg&s\" alt=\"Google\" className=\"social-icon\" />\n//               Google\n//             </button>\n//             <button type=\"button\" className=\"social-btn\">\n//               <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQiXN9xSEe8unzPBEQOeAKXd9Q55efGHGB9BA&s\" alt=\"Facebook\" className=\"social-icon\" />\n//               Facebook\n//             </button>\n//           </div>\n//           <div className=\"text-center\">\n//             <Link to=\"/signup\" className=\"link-button\">Don't have an account? Sign up</Link>\n//           </div>\n//         </form>\n//         <ToastContainer />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default LogIn;","map":{"version":3,"names":[],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Components/LogIn.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { handleSuccess, handleError } from '../utils.js'; // Ensure utils is correctly imported\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { ToastContainer } from 'react-toastify';\r\n// // import { useGoogleLogin } from '@react-oauth/google';\r\n// import './LogIn.css';\r\n// // import { googleAuth } from './api';\r\n\r\n// function LogIn() {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const loginwithgoole = () =>{\r\n//     window.open(\"http://localhost:8080/auth/google/callback\" , \"_self\");\r\n//   }\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     const formData = { email, password };\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:8080/auth/login', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(formData),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       const { success, message, token, username,error } = data;\r\n\r\n//       if (response.ok && success && token) {\r\n//         handleSuccess(message);\r\n//         localStorage.setItem(\"token\", token);\r\n//         localStorage.setItem(\"loggedInUser\", username);\r\n\r\n//         setTimeout(() => {\r\n//           navigate('/'); // Redirect after successful login\r\n//         }, 1000);\r\n//       } else {\r\n//         setError(error || 'Invalid credentials');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//       setError('An error occurred. Please try again later.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-page\">\r\n//       <div className=\"login-container\">\r\n//         <h1 className=\"login-heading\">Log In</h1>\r\n//         {error && <p className=\"error-text\" style={{ color: 'red' }}>{error}</p>}\r\n//         <form className=\"form-container\" onSubmit={handleSubmit}>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"email\" className=\"labels\">Email</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               id=\"email\"\r\n//               className=\"input\"\r\n//               placeholder=\"Enter your email\"\r\n//               required\r\n//               value={email}\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//               autoFocus\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"password\" className=\"labels\">Password</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               id=\"password\"\r\n//               className=\"input\"\r\n//               placeholder=\"Enter your password\"\r\n//               required\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//               onBlur={(e) => {\r\n//                 if (!e.target.value) setError('Password is required');\r\n//               }}\r\n//             />\r\n//           </div>\r\n//           <div className=\"remember-forgot-container\">\r\n//             {/* <div>\r\n//               <input type=\"checkbox\" id=\"remember\" />\r\n//               <label htmlFor=\"remember\" className=\"remember\"> Remember Me</label>\r\n//             </div> */}\r\n//             <Link to=\"/forgot-password\" className=\"forgot\">Forgot Password?</Link>\r\n//           </div>\r\n//           <button type=\"submit\" className=\"log-in-btn\">Log In</button>\r\n//           <div className=\"social-container\">\r\n//             <button type=\"button\" className=\"social-btn\" onClick = {loginwithgoole}>\r\n//               <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6WwgH7Nl5_AW9nDCnR2Ozb_AU3rkIbSJdAg&s\" alt=\"Google\" className=\"social-icon\" />\r\n//               Google\r\n//             </button>\r\n//             <button type=\"button\" className=\"social-btn\">\r\n//               <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQiXN9xSEe8unzPBEQOeAKXd9Q55efGHGB9BA&s\" alt=\"Facebook\" className=\"social-icon\" />\r\n//               Facebook\r\n//             </button>\r\n//           </div>\r\n//           <div className=\"text-center\">\r\n//             <Link to=\"/signup\" className=\"link-button\">Don't have an account? Sign up</Link>\r\n//           </div>\r\n//         </form>\r\n//         <ToastContainer />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LogIn;\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
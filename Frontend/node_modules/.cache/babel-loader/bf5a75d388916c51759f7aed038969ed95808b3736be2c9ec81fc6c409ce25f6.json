{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chama\\\\OneDrive\\\\Desktop\\\\plantdiseasedetection1\\\\Frontend\\\\src\\\\Components\\\\Profile.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// function Profile() {\n//   const [userInfo, setUserInfo] = useState(null);\n\n//   useEffect(() => {\n//     const userInfoString = localStorage.getItem('loggedInUser'); // Retrieve user info from localStorage\n//     if (userInfoString) {\n//       setUserInfo(userInfoString); // No need to parse it if it's a plain string\n//     }\n//   }, []);\n\n//   return (\n//     <div className=\"profile-page\">\n//       <h1>Profile Page</h1>\n//       {userInfo ? (\n//         <div>\n//           <p><strong>Username:</strong> {userInfo}</p> {/* Display the username directly */}\n//           {/* Add more user details here */}\n//         </div>\n//       ) : (\n//         <p>No user information available. Please log in.</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Profile;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [userInfo, setUserInfo] = useState(null);\n  const [diagnosisHistory, setDiagnosisHistory] = useState([]);\n  useEffect(() => {\n    const userInfoString = localStorage.getItem('loggedInUser'); // Retrieve user info from localStorage\n    if (userInfoString) {\n      setUserInfo(userInfoString); // No need to parse it if it's a plain string\n    }\n\n    // Retrieve diagnosis history from localStorage or make an API call to fetch it\n    const diagnosisHistoryString = localStorage.getItem('diagnosisHistory');\n    if (diagnosisHistoryString) {\n      setDiagnosisHistory(JSON.parse(diagnosisHistoryString)); // Assuming it's stored as a JSON string\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), userInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 14\n        }, this), \" \", userInfo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Diagnosis History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), diagnosisHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: diagnosisHistory.map((diagnosis, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Diagnosis:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 22\n            }, this), \" \", diagnosis.disease]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 22\n            }, this), \" \", diagnosis.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No diagnosis history available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No user information available. Please log in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"lymI/IJ/0TNJPgBOUaS8ZJjYQaQ=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Profile","_s","userInfo","setUserInfo","diagnosisHistory","setDiagnosisHistory","userInfoString","localStorage","getItem","diagnosisHistoryString","JSON","parse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","diagnosis","index","disease","date","_c","$RefreshReg$"],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Components/Profile.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// function Profile() {\r\n//   const [userInfo, setUserInfo] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const userInfoString = localStorage.getItem('loggedInUser'); // Retrieve user info from localStorage\r\n//     if (userInfoString) {\r\n//       setUserInfo(userInfoString); // No need to parse it if it's a plain string\r\n//     }\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"profile-page\">\r\n//       <h1>Profile Page</h1>\r\n//       {userInfo ? (\r\n//         <div>\r\n//           <p><strong>Username:</strong> {userInfo}</p> {/* Display the username directly */}\r\n//           {/* Add more user details here */}\r\n//         </div>\r\n//       ) : (\r\n//         <p>No user information available. Please log in.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Profile;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction Profile() {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [diagnosisHistory, setDiagnosisHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const userInfoString = localStorage.getItem('loggedInUser'); // Retrieve user info from localStorage\r\n    if (userInfoString) {\r\n      setUserInfo(userInfoString); // No need to parse it if it's a plain string\r\n    }\r\n\r\n    // Retrieve diagnosis history from localStorage or make an API call to fetch it\r\n    const diagnosisHistoryString = localStorage.getItem('diagnosisHistory');\r\n    if (diagnosisHistoryString) {\r\n      setDiagnosisHistory(JSON.parse(diagnosisHistoryString)); // Assuming it's stored as a JSON string\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <h1>Profile Page</h1>\r\n      {userInfo ? (\r\n        <div>\r\n          <p><strong>Username:</strong> {userInfo}</p>\r\n          {/* Display the diagnosis history */}\r\n          <h2>Diagnosis History</h2>\r\n          {diagnosisHistory.length > 0 ? (\r\n            <ul>\r\n              {diagnosisHistory.map((diagnosis, index) => (\r\n                <li key={index}>\r\n                  <p><strong>Diagnosis:</strong> {diagnosis.disease}</p>\r\n                  <p><strong>Date:</strong> {diagnosis.date}</p>\r\n                  {/* You can display more details here */}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No diagnosis history available.</p>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <p>No user information available. Please log in.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chama\\\\OneDrive\\\\Desktop\\\\plantdiseasedetection1\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import Api from \"./Flask/Api.jsx\"\n// import { useState, useEffect, createContext } from 'react';\n// import { Routes, Route, Navigate } from 'react-router-dom';\n// import axios from 'axios';\n// import SignUp from './Components/SignUp.jsx';\n// import LogIn from './Components/LogIn.jsx';\n// import Home from './Components/Home.jsx';\n// import Profile from './Components/Profile.jsx';\n// import Error from './Components/Error.jsx';\n// import UploadAndDiagnosis from './Components/UploadAndDiagnosis.jsx';\n// import ForgotPassword from './Components/ForgotPassword.jsx';\n// import ResetPassword from './Components/ResetPassword.jsx';\n// import OTPVerification from './Components/OTPVerification.jsx';\n\n// export const IsLoggedInContext = createContext();\n// export const SetIsLoggedInContext = createContext();\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [loading, setLoading] = useState(true);\n\n//   // This function is passed to LogIn component to update the login state after a successful login\n//   const handleLoginSuccess = () => {\n//     setIsLoggedIn(true);\n//     localStorage.setItem('isLoggedIn', 'true');\n//   };\n\n//   useEffect(() => {\n//     // Initialize the login state from localStorage when the app first loads\n//     const storedLoginStatus = localStorage.getItem('isLoggedIn');\n//     if (storedLoginStatus === 'true') {\n//       setIsLoggedIn(true);\n//       setLoading(false);\n//     } else {\n//       axios.get('http://localhost:8080/user', { withCredentials: true })\n//         .then((res) => {\n//           if (res.data.user) {\n//             setIsLoggedIn(true);\n//             localStorage.setItem('isLoggedIn', 'true');\n//           } else {\n//             setIsLoggedIn(false);\n//             localStorage.removeItem('isLoggedIn');\n//           }\n//         })\n//         .catch((err) => {\n//           setIsLoggedIn(false);\n//           localStorage.removeItem('isLoggedIn');\n//           console.log(err);\n//         })\n//         .finally(() => setLoading(false));\n//     }\n//   }, []);\n\n//   // This function handles logging out the user\n//   const handleLogout = async () => {\n//     try {\n//       await axios.get('http://localhost:8080/logout', { withCredentials: true });\n//       setIsLoggedIn(false);\n//       localStorage.removeItem('isLoggedIn');\n//     } catch (err) {\n//       console.log('Error logging out:', err);\n//     }\n//   };\n\n//   if (loading) return null; // You could also return a loading spinner here\n\n//   return (\n//     <div>\n//        <IsLoggedInContext.Provider value={isLoggedIn}>\n//         <SetIsLoggedInContext.Provider value={setIsLoggedIn}>\n//           <Routes>\n//             <Route path=\"/\" element={<Navigate to=\"/home\" />} />\n//             <Route path=\"/home\" element={<Home />} />\n//             <Route path=\"/login\" element={isLoggedIn ? <Navigate to=\"/\" /> : <LogIn onLoginSuccess={handleLoginSuccess} />} />\n//             <Route path=\"/UploadAndDiagnosis\" element={<UploadAndDiagnosis />} />\n//             <Route path=\"/upload-and-diagnose\" element={<Api />} />\n//             <Route path=\"/signup\" element={isLoggedIn ? <Navigate to=\"/\" /> : <SignUp />} />\n//             <Route path=\"/forgot-password\" element={isLoggedIn ? <Navigate to=\"/\" /> : <ForgotPassword />} />\n//             <Route path=\"/verify-otp\" element={isLoggedIn ? <Navigate to=\"/\" /> : <OTPVerification />} />\n//             <Route path=\"/reset-password\" element={isLoggedIn ? <Navigate to=\"/\" /> : <ResetPassword />} />\n//             <Route path=\"/profile\" element={isLoggedIn ? <Profile /> : <Navigate to=\"/login\" />} />\n//             <Route path=\"*\" element={<Error />} />\n//           </Routes>\n//         </SetIsLoggedInContext.Provider>\n//       </IsLoggedInContext.Provider> \n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Api from \"./Flask/Api.jsx\";\nimport SignUp from \"./Components/SignUp.jsx\";\nimport LogIn from \"./Components/LogIn.jsx\";\nimport Home from \"./Components/Home.jsx\";\nimport Profile from \"./Components/Profile.jsx\";\nimport Error from \"./Components/Error.jsx\";\nimport UploadAndDiagnosis from \"./Components/UploadAndDiagnosis.jsx\";\nimport ForgotPassword from \"./Components/ForgotPassword.jsx\";\nimport ResetPassword from \"./Components/ResetPassword.jsx\";\nimport OTPVerification from \"./Components/OTPVerification.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n    localStorage.setItem(\"isLoggedIn\", \"true\");\n  };\n  useEffect(() => {\n    const storedLoginStatus = localStorage.getItem(\"isLoggedIn\");\n    if (storedLoginStatus === \"true\") {\n      setIsLoggedIn(true);\n      setLoading(false);\n    } else {\n      axios.get(\"http://localhost:8080/user\", {\n        withCredentials: true\n      }).then(res => {\n        if (res.data.user) {\n          setIsLoggedIn(true);\n          localStorage.setItem(\"isLoggedIn\", \"true\");\n        } else {\n          setIsLoggedIn(false);\n          localStorage.removeItem(\"isLoggedIn\");\n        }\n      }).catch(err => {\n        console.error(\"Error fetching user:\", err);\n        setIsLoggedIn(false);\n        localStorage.removeItem(\"isLoggedIn\");\n      }).finally(() => setLoading(false));\n    }\n  }, []);\n  const handleLogout = async () => {\n    try {\n      await axios.get(\"http://localhost:8080/logout\", {\n        withCredentials: true\n      });\n      setIsLoggedIn(false);\n      localStorage.removeItem(\"isLoggedIn\");\n    } catch (err) {\n      console.error(\"Error logging out:\", err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 12\n    }, this); // Replace with a spinner if needed\n  }\n  const PrivateRoute = ({\n    children\n  }) => {\n    return isLoggedIn ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 36\n    }, this);\n  };\n  const PublicRoute = ({\n    children\n  }) => {\n    return isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }, this) : children;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      setIsLoggedIn,\n      handleLogout\n    },\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n          children: /*#__PURE__*/_jsxDEV(LogIn, {\n            onLoginSuccess: handleLoginSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n          children: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgot-password\",\n        element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n          children: /*#__PURE__*/_jsxDEV(ForgotPassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/verify-otp\",\n        element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n          children: /*#__PURE__*/_jsxDEV(OTPVerification, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/reset-password\",\n        element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n          children: /*#__PURE__*/_jsxDEV(ResetPassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/UploadAndDiagnosis\",\n        element: /*#__PURE__*/_jsxDEV(UploadAndDiagnosis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/upload-and-diagnose\",\n        element: /*#__PURE__*/_jsxDEV(Api, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          children: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6XovRI2vybcB/6l9xxdmRBpTm1w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createContext","Routes","Route","Navigate","axios","Api","SignUp","LogIn","Home","Profile","Error","UploadAndDiagnosis","ForgotPassword","ResetPassword","OTPVerification","jsxDEV","_jsxDEV","AuthContext","App","_s","isLoggedIn","setIsLoggedIn","loading","setLoading","handleLoginSuccess","localStorage","setItem","storedLoginStatus","getItem","get","withCredentials","then","res","data","user","removeItem","catch","err","console","error","finally","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","PrivateRoute","to","PublicRoute","Provider","value","path","element","onLoginSuccess","_c","$RefreshReg$"],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/App.js"],"sourcesContent":["// import React from \"react\";\n// import Api from \"./Flask/Api.jsx\"\n// import { useState, useEffect, createContext } from 'react';\n// import { Routes, Route, Navigate } from 'react-router-dom';\n// import axios from 'axios';\n// import SignUp from './Components/SignUp.jsx';\n// import LogIn from './Components/LogIn.jsx';\n// import Home from './Components/Home.jsx';\n// import Profile from './Components/Profile.jsx';\n// import Error from './Components/Error.jsx';\n// import UploadAndDiagnosis from './Components/UploadAndDiagnosis.jsx';\n// import ForgotPassword from './Components/ForgotPassword.jsx';\n// import ResetPassword from './Components/ResetPassword.jsx';\n// import OTPVerification from './Components/OTPVerification.jsx';\n\n// export const IsLoggedInContext = createContext();\n// export const SetIsLoggedInContext = createContext();\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [loading, setLoading] = useState(true);\n\n//   // This function is passed to LogIn component to update the login state after a successful login\n//   const handleLoginSuccess = () => {\n//     setIsLoggedIn(true);\n//     localStorage.setItem('isLoggedIn', 'true');\n//   };\n\n//   useEffect(() => {\n//     // Initialize the login state from localStorage when the app first loads\n//     const storedLoginStatus = localStorage.getItem('isLoggedIn');\n//     if (storedLoginStatus === 'true') {\n//       setIsLoggedIn(true);\n//       setLoading(false);\n//     } else {\n//       axios.get('http://localhost:8080/user', { withCredentials: true })\n//         .then((res) => {\n//           if (res.data.user) {\n//             setIsLoggedIn(true);\n//             localStorage.setItem('isLoggedIn', 'true');\n//           } else {\n//             setIsLoggedIn(false);\n//             localStorage.removeItem('isLoggedIn');\n//           }\n//         })\n//         .catch((err) => {\n//           setIsLoggedIn(false);\n//           localStorage.removeItem('isLoggedIn');\n//           console.log(err);\n//         })\n//         .finally(() => setLoading(false));\n//     }\n//   }, []);\n\n//   // This function handles logging out the user\n//   const handleLogout = async () => {\n//     try {\n//       await axios.get('http://localhost:8080/logout', { withCredentials: true });\n//       setIsLoggedIn(false);\n//       localStorage.removeItem('isLoggedIn');\n//     } catch (err) {\n//       console.log('Error logging out:', err);\n//     }\n//   };\n\n//   if (loading) return null; // You could also return a loading spinner here\n\n//   return (\n//     <div>\n//        <IsLoggedInContext.Provider value={isLoggedIn}>\n//         <SetIsLoggedInContext.Provider value={setIsLoggedIn}>\n//           <Routes>\n//             <Route path=\"/\" element={<Navigate to=\"/home\" />} />\n//             <Route path=\"/home\" element={<Home />} />\n//             <Route path=\"/login\" element={isLoggedIn ? <Navigate to=\"/\" /> : <LogIn onLoginSuccess={handleLoginSuccess} />} />\n//             <Route path=\"/UploadAndDiagnosis\" element={<UploadAndDiagnosis />} />\n//             <Route path=\"/upload-and-diagnose\" element={<Api />} />\n//             <Route path=\"/signup\" element={isLoggedIn ? <Navigate to=\"/\" /> : <SignUp />} />\n//             <Route path=\"/forgot-password\" element={isLoggedIn ? <Navigate to=\"/\" /> : <ForgotPassword />} />\n//             <Route path=\"/verify-otp\" element={isLoggedIn ? <Navigate to=\"/\" /> : <OTPVerification />} />\n//             <Route path=\"/reset-password\" element={isLoggedIn ? <Navigate to=\"/\" /> : <ResetPassword />} />\n//             <Route path=\"/profile\" element={isLoggedIn ? <Profile /> : <Navigate to=\"/login\" />} />\n//             <Route path=\"*\" element={<Error />} />\n//           </Routes>\n//         </SetIsLoggedInContext.Provider>\n//       </IsLoggedInContext.Provider> \n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Api from \"./Flask/Api.jsx\";\nimport SignUp from \"./Components/SignUp.jsx\";\nimport LogIn from \"./Components/LogIn.jsx\";\nimport Home from \"./Components/Home.jsx\";\nimport Profile from \"./Components/Profile.jsx\";\nimport Error from \"./Components/Error.jsx\";\nimport UploadAndDiagnosis from \"./Components/UploadAndDiagnosis.jsx\";\nimport ForgotPassword from \"./Components/ForgotPassword.jsx\";\nimport ResetPassword from \"./Components/ResetPassword.jsx\";\nimport OTPVerification from \"./Components/OTPVerification.jsx\";\n\nexport const AuthContext = createContext();\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n    localStorage.setItem(\"isLoggedIn\", \"true\");\n  };\n\n  useEffect(() => {\n    const storedLoginStatus = localStorage.getItem(\"isLoggedIn\");\n\n    if (storedLoginStatus === \"true\") {\n      setIsLoggedIn(true);\n      setLoading(false);\n    } else {\n      axios\n        .get(\"http://localhost:8080/user\", { withCredentials: true })\n        .then((res) => {\n          if (res.data.user) {\n            setIsLoggedIn(true);\n            localStorage.setItem(\"isLoggedIn\", \"true\");\n          } else {\n            setIsLoggedIn(false);\n            localStorage.removeItem(\"isLoggedIn\");\n          }\n        })\n        .catch((err) => {\n          console.error(\"Error fetching user:\", err);\n          setIsLoggedIn(false);\n          localStorage.removeItem(\"isLoggedIn\");\n        })\n        .finally(() => setLoading(false));\n    }\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await axios.get(\"http://localhost:8080/logout\", { withCredentials: true });\n      setIsLoggedIn(false);\n      localStorage.removeItem(\"isLoggedIn\");\n    } catch (err) {\n      console.error(\"Error logging out:\", err);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>; // Replace with a spinner if needed\n  }\n\n  const PrivateRoute = ({ children }) => {\n    return isLoggedIn ? children : <Navigate to=\"/login\" />;\n  };\n\n  const PublicRoute = ({ children }) => {\n    return isLoggedIn ? <Navigate to=\"/\" /> : children;\n  };\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, setIsLoggedIn, handleLogout }}>\n      <Routes>\n        <Route path=\"/\" element={<Navigate to=\"/home\" />} />\n        <Route path=\"/home\" element={<Home />} />\n        <Route\n          path=\"/login\"\n          element={\n            <PublicRoute>\n              <LogIn onLoginSuccess={handleLoginSuccess} />\n            </PublicRoute>\n          }\n        />\n        <Route\n          path=\"/signup\"\n          element={\n            <PublicRoute>\n              <SignUp />\n            </PublicRoute>\n          }\n        />\n        <Route\n          path=\"/forgot-password\"\n          element={\n            <PublicRoute>\n              <ForgotPassword />\n            </PublicRoute>\n          }\n        />\n        <Route\n          path=\"/verify-otp\"\n          element={\n            <PublicRoute>\n              <OTPVerification />\n            </PublicRoute>\n          }\n        />\n        <Route\n          path=\"/reset-password\"\n          element={\n            <PublicRoute>\n              <ResetPassword />\n            </PublicRoute>\n          }\n        />\n        <Route path=\"/UploadAndDiagnosis\" element={<UploadAndDiagnosis />} />\n        <Route path=\"/upload-and-diagnose\" element={<Api />} />\n        <Route\n          path=\"/profile\"\n          element={\n            <PrivateRoute>\n              <Profile />\n            </PrivateRoute>\n          }\n        />\n        <Route path=\"*\" element={<Error />} />\n      </Routes>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chama\\\\OneDrive\\\\Desktop\\\\plantdiseasedetection1\\\\Frontend\\\\src\\\\Components\\\\ForgotPassword.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import './ForgotPassword.css';\n\n// // const ForgotPassword = () => {\n// //     const [email, setEmail] = useState('');\n// //     const [message, setMessage] = useState('');\n// //     const [isLoading, setIsLoading] = useState(false);\n\n// //     const handleSubmit = async (e) => {\n// //         e.preventDefault();\n// //         setIsLoading(true);\n// //         try {\n// //             const res = await fetch('http://localhost:3000/auth/forgot-password', {\n// //                 method: 'POST',\n// //                 headers: { 'Content-Type': 'application/json' },\n// //                 body: JSON.stringify({ email })\n// //             });\n// //             const data = await res.json();\n// //             setMessage(data.message || 'Check your email for the password reset link. If you don’t see it, please check your spam folder.');\n// //         } catch (error) {\n// //             setMessage('Failed to send password reset link.');\n// //         }\n// //         setIsLoading(false);\n// //     };\n\n// //     return (\n// //         <div className=\"forgot-password-container\">\n// //             <form className=\"forgot-password-form\" onSubmit={handleSubmit}>\n// //                 <h2>Forgot Password</h2>\n// //                 <p>Enter your email to receive a password reset link.</p>\n// //                 {message && <p className=\"message\">{message}</p>}\n// //                 <input\n// //                     type=\"email\"\n// //                     name=\"email\"\n// //                     placeholder=\"Email Address\"\n// //                     value={email}\n// //                     onChange={(e) => setEmail(e.target.value)}\n// //                     required\n// //                 />\n// //                 <button type=\"submit\" disabled={isLoading}>\n// //                     {isLoading ? 'Sending...' : 'Send Reset Link'}\n// //                 </button>\n// //             </form>\n// //         </div>\n// //     );\n// // };\n\n// // export default ForgotPassword;\n\n// // ForgotPassword.jsx\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import './ForgotPassword.css';\n\n// function ForgotPassword() {\n//   const [email, setEmail] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://localhost:8080/forgot-password', { email });\n//       setMessage(response.data.message);\n//       setTimeout(() => {\n//         navigate('/otp-verification', { state: { email } });\n//       }, 2000);\n//     } catch (error) {\n//       setMessage(error.response.data.message || 'An error occurred');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Forgot Password</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           placeholder=\"Enter your registered email\"\n//           required\n//         />\n//         <button type=\"submit\">Send OTP</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default ForgotPassword;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ForgotPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n    try {\n      const response = await axios.post('http://localhost:8080/forgot-password', {\n        email\n      }, {\n        withCredentials: true\n      });\n      if (response && response.data) {\n        setMessage(response.data.message || 'An email has been sent to reset your password.');\n      }\n    } catch (err) {\n      console.error('Error during password reset:', err);\n      if (err.response && err.response.data) {\n        setError(err.response.data.message || 'Something went wrong, please try again.');\n      } else {\n        setError('Network error, please check your connection.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"forgot-password-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"forgot-password-title\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"forgot-password-description\",\n        children: \"Enter your registered email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"forgot-password-input\",\n        type: \"email\",\n        placeholder: \"Enter your registered email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"forgot-password-button\",\n        type: \"submit\",\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}\n_s(ForgotPassword, \"+oC6IIAeBPUO7WCSW4CSxdFqDlU=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","message","setMessage","error","setError","handleSubmit","e","preventDefault","response","post","withCredentials","data","err","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Components/ForgotPassword.jsx"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import './ForgotPassword.css';\r\n\r\n// // const ForgotPassword = () => {\r\n// //     const [email, setEmail] = useState('');\r\n// //     const [message, setMessage] = useState('');\r\n// //     const [isLoading, setIsLoading] = useState(false);\r\n\r\n// //     const handleSubmit = async (e) => {\r\n// //         e.preventDefault();\r\n// //         setIsLoading(true);\r\n// //         try {\r\n// //             const res = await fetch('http://localhost:3000/auth/forgot-password', {\r\n// //                 method: 'POST',\r\n// //                 headers: { 'Content-Type': 'application/json' },\r\n// //                 body: JSON.stringify({ email })\r\n// //             });\r\n// //             const data = await res.json();\r\n// //             setMessage(data.message || 'Check your email for the password reset link. If you don’t see it, please check your spam folder.');\r\n// //         } catch (error) {\r\n// //             setMessage('Failed to send password reset link.');\r\n// //         }\r\n// //         setIsLoading(false);\r\n// //     };\r\n\r\n// //     return (\r\n// //         <div className=\"forgot-password-container\">\r\n// //             <form className=\"forgot-password-form\" onSubmit={handleSubmit}>\r\n// //                 <h2>Forgot Password</h2>\r\n// //                 <p>Enter your email to receive a password reset link.</p>\r\n// //                 {message && <p className=\"message\">{message}</p>}\r\n// //                 <input\r\n// //                     type=\"email\"\r\n// //                     name=\"email\"\r\n// //                     placeholder=\"Email Address\"\r\n// //                     value={email}\r\n// //                     onChange={(e) => setEmail(e.target.value)}\r\n// //                     required\r\n// //                 />\r\n// //                 <button type=\"submit\" disabled={isLoading}>\r\n// //                     {isLoading ? 'Sending...' : 'Send Reset Link'}\r\n// //                 </button>\r\n// //             </form>\r\n// //         </div>\r\n// //     );\r\n// // };\r\n\r\n// // export default ForgotPassword;\r\n\r\n\r\n// // ForgotPassword.jsx\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './ForgotPassword.css';\r\n\r\n// function ForgotPassword() {\r\n//   const [email, setEmail] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.post('http://localhost:8080/forgot-password', { email });\r\n//       setMessage(response.data.message);\r\n//       setTimeout(() => {\r\n//         navigate('/otp-verification', { state: { email } });\r\n//       }, 2000);\r\n//     } catch (error) {\r\n//       setMessage(error.response.data.message || 'An error occurred');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Forgot Password</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           placeholder=\"Enter your registered email\"\r\n//           required\r\n//         />\r\n//         <button type=\"submit\">Send OTP</button>\r\n//       </form>\r\n//       {message && <p>{message}</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ForgotPassword;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './ForgotPassword.css';\r\n\r\nfunction ForgotPassword() {\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setMessage('');\r\n        setError('');\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/forgot-password', { email }, { withCredentials: true });\r\n\r\n            if (response && response.data) {\r\n                setMessage(response.data.message || 'An email has been sent to reset your password.');\r\n            }\r\n        } catch (err) {\r\n            console.error('Error during password reset:', err);\r\n            if (err.response && err.response.data) {\r\n                setError(err.response.data.message || 'Something went wrong, please try again.');\r\n            } else {\r\n                setError('Network error, please check your connection.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"forgot-password-container\">\r\n            <form className=\"forgot-password-form\" onSubmit={handleSubmit}>\r\n                <h2 className=\"forgot-password-title\">Forgot Password</h2>\r\n                <p className=\"forgot-password-description\">Enter your registered email</p>\r\n                <input\r\n                    className=\"forgot-password-input\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter your registered email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n                <button className=\"forgot-password-button\" type=\"submit\">Send OTP</button>\r\n                {message && <p className=\"success-message\">{message}</p>}\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chama\\\\OneDrive\\\\Desktop\\\\plantdiseasedetection1\\\\Frontend\\\\src\\\\Components\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setErrorMessage('You need to log in to view your profile.');\n      return;\n    }\n    axios.post('http://localhost:8080/diagnosis-history', {\n      token\n    }, {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.success) {\n        setHistory(response.data.history);\n      } else {\n        setErrorMessage(response.data.message);\n      }\n    }).catch(() => {\n      setErrorMessage('Failed to load diagnosis history.');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Diagnosis History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Explore your results with rich visuals and animations.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-container\",\n      children: history.length > 0 ? history.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"disease-name\",\n            children: item.diseaseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"diagnosis-date\",\n            children: [\"Diagnosed on: \", new Date(item.createdAt).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"disease-image\",\n            src: item.imageUrl,\n            alt: item.diseaseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-history\",\n        children: \"No diagnosis history found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"f0guHKD51deeTm2b2mmvoHK44sg=\");\n_c = Profile;\nexport default Profile;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Profile.css';\n\n// function Profile() {\n//   const [history, setHistory] = useState([]); // Diagnosis history state\n//   const [errorMessage, setErrorMessage] = useState(''); // Error message state\n//   const [isLoading, setIsLoading] = useState(true); // Loading state\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token'); // Get token from localStorage\n\n//     if (!token) {\n//       setErrorMessage('You need to log in to view your profile.');\n//       setIsLoading(false);\n//       return;\n//     }\n\n//     // Fetch diagnosis history\n//     axios\n//       .post(\n//         'http://localhost:8080/diagnosis-history',\n//         {},\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`, // Use Authorization header for token\n//           },\n//         }\n//       )\n//       .then((response) => {\n//         setIsLoading(false); // Stop loading\n//         if (response.data.success) {\n//           setHistory(response.data.history); // Set fetched history\n//         } else {\n//           setErrorMessage(response.data.message); // Display backend error\n//         }\n//       })\n//       .catch((error) => {\n//         setIsLoading(false); // Stop loading\n//         setErrorMessage(\n//           error.response?.data?.message || 'Failed to load diagnosis history.'\n//         ); // Display backend or default error\n//       });\n//   }, []);\n\n//   return (\n//     <div className=\"profile\">\n//       <div className=\"profile-header\">\n//         <h1>Your Diagnosis History</h1>\n//         <p>Explore your results with rich visuals and animations.</p>\n//       </div>\n\n//       {/* Show loading spinner while fetching */}\n//       {isLoading && <div className=\"loading-spinner\">Loading...</div>}\n\n//       {/* Display error message */}\n//       {errorMessage && !isLoading && <p className=\"error-message\">{errorMessage}</p>}\n\n//       {/* Diagnosis history list */}\n//       <div className=\"history-container\">\n//         {history.length > 0 && !isLoading ? (\n//           history.map((item, index) => (\n//             <div className=\"history-row\" key={index}>\n//               <div className=\"content\">\n//                 <h3 className=\"disease-name\">{item.diseaseName}</h3>\n//                 <p className=\"diagnosis-date\">\n//                   Diagnosed on: {new Date(item.createdAt).toLocaleDateString()}\n//                 </p>\n//                 <img\n//                   className=\"disease-image\"\n//                   src={item.imageUrl} // Use Cloudinary image URL from the backend\n//                   alt={item.diseaseName}\n//                 />\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           !isLoading && <p className=\"no-history\">No diagnosis history found.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Profile","_s","history","setHistory","errorMessage","setErrorMessage","token","localStorage","getItem","post","withCredentials","then","response","data","success","message","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","index","diseaseName","Date","createdAt","toLocaleDateString","src","imageUrl","alt","_c","$RefreshReg$"],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Components/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Profile.css';\r\n\r\nfunction Profile() {\r\n  const [history, setHistory] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      setErrorMessage('You need to log in to view your profile.');\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\r\n        'http://localhost:8080/diagnosis-history',\r\n        { token },\r\n        { withCredentials: true }\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setHistory(response.data.history);\r\n        } else {\r\n          setErrorMessage(response.data.message);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setErrorMessage('Failed to load diagnosis history.');\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"profile-header\">\r\n        <h1>Your Diagnosis History</h1>\r\n        <p>Explore your results with rich visuals and animations.</p>\r\n      </div>\r\n\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n      <div className=\"history-container\">\r\n        {history.length > 0 ? (\r\n          history.map((item, index) => (\r\n            <div className=\"history-row\" key={index}>\r\n              <div className=\"content\">\r\n                <h3 className=\"disease-name\">{item.diseaseName}</h3>\r\n                <p className=\"diagnosis-date\">\r\n                  Diagnosed on: {new Date(item.createdAt).toLocaleDateString()}\r\n                </p>\r\n                <img\r\n                  className=\"disease-image\"\r\n                  src={item.imageUrl}\r\n                  alt={item.diseaseName}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p className=\"no-history\">No diagnosis history found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import './Profile.css';\r\n\r\n// function Profile() {\r\n//   const [history, setHistory] = useState([]); // Diagnosis history state\r\n//   const [errorMessage, setErrorMessage] = useState(''); // Error message state\r\n//   const [isLoading, setIsLoading] = useState(true); // Loading state\r\n\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem('token'); // Get token from localStorage\r\n\r\n//     if (!token) {\r\n//       setErrorMessage('You need to log in to view your profile.');\r\n//       setIsLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     // Fetch diagnosis history\r\n//     axios\r\n//       .post(\r\n//         'http://localhost:8080/diagnosis-history',\r\n//         {},\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`, // Use Authorization header for token\r\n//           },\r\n//         }\r\n//       )\r\n//       .then((response) => {\r\n//         setIsLoading(false); // Stop loading\r\n//         if (response.data.success) {\r\n//           setHistory(response.data.history); // Set fetched history\r\n//         } else {\r\n//           setErrorMessage(response.data.message); // Display backend error\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         setIsLoading(false); // Stop loading\r\n//         setErrorMessage(\r\n//           error.response?.data?.message || 'Failed to load diagnosis history.'\r\n//         ); // Display backend or default error\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"profile\">\r\n//       <div className=\"profile-header\">\r\n//         <h1>Your Diagnosis History</h1>\r\n//         <p>Explore your results with rich visuals and animations.</p>\r\n//       </div>\r\n\r\n//       {/* Show loading spinner while fetching */}\r\n//       {isLoading && <div className=\"loading-spinner\">Loading...</div>}\r\n\r\n//       {/* Display error message */}\r\n//       {errorMessage && !isLoading && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n//       {/* Diagnosis history list */}\r\n//       <div className=\"history-container\">\r\n//         {history.length > 0 && !isLoading ? (\r\n//           history.map((item, index) => (\r\n//             <div className=\"history-row\" key={index}>\r\n//               <div className=\"content\">\r\n//                 <h3 className=\"disease-name\">{item.diseaseName}</h3>\r\n//                 <p className=\"diagnosis-date\">\r\n//                   Diagnosed on: {new Date(item.createdAt).toLocaleDateString()}\r\n//                 </p>\r\n//                 <img\r\n//                   className=\"disease-image\"\r\n//                   src={item.imageUrl} // Use Cloudinary image URL from the backend\r\n//                   alt={item.diseaseName}\r\n//                 />\r\n//               </div>\r\n//             </div>\r\n//           ))\r\n//         ) : (\r\n//           !isLoading && <p className=\"no-history\">No diagnosis history found.</p>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
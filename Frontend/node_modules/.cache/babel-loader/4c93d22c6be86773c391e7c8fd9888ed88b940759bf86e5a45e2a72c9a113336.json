{"ast":null,"code":"// src/utils/authUtils.js\n\n// Function to check if the token has expired\nconst isTokenExpired = token => {\n  if (!token) return true;\n  try {\n    const decodedToken = JSON.parse(atob(token.split('.')[1])); // Decode JWT payload\n    const currentTime = Date.now() / 1000; // Current time in seconds\n    return decodedToken.exp < currentTime; // Check if the token has expired\n  } catch (error) {\n    console.error('Invalid token:', error);\n    return true;\n  }\n};\n\n// Function to log the user out\nconst logoutUser = navigate => {\n  localStorage.clear();\n  navigate('/'); // Redirect to the login page\n  window.location.reload(); // Refresh to clear the session\n};\nexport { isTokenExpired, logoutUser };","map":{"version":3,"names":["isTokenExpired","token","decodedToken","JSON","parse","atob","split","currentTime","Date","now","exp","error","console","logoutUser","navigate","localStorage","clear","window","location","reload"],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Components/authUtils.js"],"sourcesContent":["// src/utils/authUtils.js\r\n\r\n// Function to check if the token has expired\r\nconst isTokenExpired = (token) => {\r\n    if (!token) return true;\r\n  \r\n    try {\r\n      const decodedToken = JSON.parse(atob(token.split('.')[1])); // Decode JWT payload\r\n      const currentTime = Date.now() / 1000; // Current time in seconds\r\n      return decodedToken.exp < currentTime; // Check if the token has expired\r\n    } catch (error) {\r\n      console.error('Invalid token:', error);\r\n      return true;\r\n    }\r\n  };\r\n  \r\n  // Function to log the user out\r\n  const logoutUser = (navigate) => {\r\n    localStorage.clear();\r\n    navigate('/'); // Redirect to the login page\r\n    window.location.reload(); // Refresh to clear the session\r\n  };\r\n  \r\n  export { isTokenExpired, logoutUser };\r\n  "],"mappings":"AAAA;;AAEA;AACA,MAAMA,cAAc,GAAIC,KAAK,IAAK;EAC9B,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;EAEvB,IAAI;IACF,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACvC,OAAOP,YAAY,CAACQ,GAAG,GAAGH,WAAW,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA,MAAME,UAAU,GAAIC,QAAQ,IAAK;EAC/BC,YAAY,CAACC,KAAK,CAAC,CAAC;EACpBF,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACfG,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC;AAED,SAASnB,cAAc,EAAEa,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chama\\\\OneDrive\\\\Desktop\\\\plantdiseasedetection1\\\\Frontend\\\\src\\\\Components\\\\LogIn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { handleSuccess, handleError } from '../utils.js'; // Ensure utils is correctly imported\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport axios from 'axios';\n// import { useGoogleLogin } from '@react-oauth/google';\nimport './LogIn.css';\n// import { googleAuth } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LogIn({\n  onLoginSuccess\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // const loginwithgoole = () => {\n  //   window.open(\"http://localhost:8080/auth/google\", \"_self\");\n  // }\n  const handleGoogleLogin = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/auth/google', {\n        withCredentials: true\n      });\n      if (response.data.success) {\n        localStorage.setItem('sessionId', response.data.sessionId);\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n        handleSuccess('Google login successful!');\n        navigate('/'); // Redirect to your desired route\n      } else {\n        handleError(response.data.error || 'Failed to authenticate with Google.');\n      }\n    } catch (error) {\n      console.error('Google login error:', error);\n      handleError('An error occurred during Google login. Please try again.');\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = {\n      email,\n      password\n    };\n    try {\n      const response = await fetch('http://localhost:8080/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      console.log(data);\n      const {\n        success,\n        message,\n        token,\n        username,\n        error\n      } = data;\n      if (response.ok && success && token) {\n        handleSuccess(message);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"loggedInUser\", username);\n        localStorage.setItem(\"isLoggedIn\", true);\n        onLoginSuccess();\n        setTimeout(() => {\n          navigate('/'); // Redirect after successful login\n        }, 1000);\n      } else {\n        setError(error || 'Invalid credentials');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('An error occurred. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"login-heading\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-container\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"labels\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            className: \"input\",\n            placeholder: \"Enter your email\",\n            required: true,\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"labels\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            className: \"input\",\n            placeholder: \"Enter your password\",\n            required: true,\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            onBlur: e => {\n              if (!e.target.value) setError('Password is required');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remember-forgot-container\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot-password\",\n            className: \"forgot\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"log-in-btn\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"social-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"social-btn\",\n            onClick: handleGoogleLogin,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6WwgH7Nl5_AW9nDCnR2Ozb_AU3rkIbSJdAg&s\",\n              alt: \"Google\",\n              className: \"social-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), \"Google\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"social-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQiXN9xSEe8unzPBEQOeAKXd9Q55efGHGB9BA&s\",\n              alt: \"Facebook\",\n              className: \"social-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), \"Facebook\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            className: \"link-button\",\n            children: \"Don't have an account? Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(LogIn, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = LogIn;\nexport default LogIn;\n\n// import React, { useState, useEffect } from 'react';\n// import { handleSuccess, handleError } from '../utils.js';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { ToastContainer } from 'react-toastify';\n// import './LogIn.css';\n\n// function LogIn({ onLoginSuccess }) {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   // Google login handler\n//   const loginWithGoogle = () => {\n//     window.open(\"http://localhost:8080/auth/google\", \"_self\");\n//   };\n\n//   // Fetch authenticated user details after Google sign-in\n//   const fetchUserDetails = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8080/auth/user', {\n//         method: 'GET',\n//         credentials: 'include', // Include session cookies\n//       });\n\n//       if (response.ok) {\n//         const data = await response.json();\n//         const { token, username } = data;\n\n//         // Store details in localStorage\n//         localStorage.setItem(\"token\", token);\n//         localStorage.setItem(\"loggedInUser\", username);\n//         localStorage.setItem(\"isLoggedIn\", true);\n\n//         handleSuccess('Google login successful!');\n//         onLoginSuccess();\n//         navigate('/'); // Redirect to home page\n//       } else {\n//         setError('Failed to fetch user details. Please try again.');\n//       }\n//     } catch (err) {\n//       console.error('Error fetching user details:', err);\n//       setError('An error occurred. Please try again later.');\n//     }\n//   };\n\n//   // Trigger user data fetch if redirected from Google\n//   useEffect(() => {\n//     fetchUserDetails();\n//   }, []);\n\n//   // Form submission handler\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     setError(''); // Clear previous errors\n\n//     try {\n//       const response = await fetch('http://localhost:8080/auth/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email, password }),\n//       });\n\n//       const data = await response.json();\n//       if (response.ok && data.success) {\n//         handleSuccess(data.message);\n//         localStorage.setItem(\"token\", data.token);\n//         localStorage.setItem(\"loggedInUser\", data.username);\n//         localStorage.setItem(\"isLoggedIn\", true);\n\n//         // Notify parent component and navigate\n//         onLoginSuccess();\n//         setTimeout(() => navigate('/'), 1000);\n//       } else {\n//         setError(data.error || 'Invalid credentials');\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//       setError('An error occurred. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-page\">\n//       <div className=\"login-container\">\n//         <h1 className=\"login-heading\">Log In</h1>\n//         {error && <p className=\"error-text\" style={{ color: 'red' }}>{error}</p>}\n\n//         <form className=\"form-container\" onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"email\" className=\"labels\">Email</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               className=\"input\"\n//               placeholder=\"Enter your email\"\n//               required\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               autoFocus\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"password\" className=\"labels\">Password</label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               className=\"input\"\n//               placeholder=\"Enter your password\"\n//               required\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               onBlur={(e) => {\n//                 if (!e.target.value) setError('Password is required');\n//               }}\n//             />\n//           </div>\n//           <div className=\"remember-forgot-container\">\n//             <Link to=\"/forgot-password\" className=\"forgot\">Forgot Password?</Link>\n//           </div>\n//           <button type=\"submit\" className=\"log-in-btn\">Log In</button>\n\n//           <div className=\"social-container\">\n//             <button type=\"button\" className=\"social-btn\" onClick={loginWithGoogle}>\n//               <img\n//                 src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6WwgH7Nl5_AW9nDCnR2Ozb_AU3rkIbSJdAg&s\"\n//                 alt=\"Google\"\n//                 className=\"social-icon\"\n//               />\n//               Google\n//             </button>\n//             <button type=\"button\" className=\"social-btn\">\n//               <img\n//                 src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQiXN9xSEe8unzPBEQOeAKXd9Q55efGHGB9BA&s\"\n//                 alt=\"Facebook\"\n//                 className=\"social-icon\"\n//               />\n//               Facebook\n//             </button>\n//           </div>\n\n//           <div className=\"text-center\">\n//             <Link to=\"/signup\" className=\"link-button\">Don't have an account? Sign up</Link>\n//           </div>\n//         </form>\n//         <ToastContainer />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default LogIn;\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["React","useState","handleSuccess","handleError","Link","useNavigate","ToastContainer","axios","jsxDEV","_jsxDEV","LogIn","onLoginSuccess","_s","email","setEmail","password","setPassword","error","setError","navigate","handleGoogleLogin","response","get","withCredentials","data","success","localStorage","setItem","sessionId","JSON","stringify","user","console","handleSubmit","event","preventDefault","formData","fetch","method","headers","body","json","log","message","token","username","ok","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","htmlFor","type","id","placeholder","required","value","onChange","e","target","autoFocus","onBlur","to","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Components/LogIn.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { handleSuccess, handleError } from '../utils.js'; // Ensure utils is correctly imported\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport axios from 'axios';\r\n// import { useGoogleLogin } from '@react-oauth/google';\r\nimport './LogIn.css';\r\n// import { googleAuth } from './api';\r\n\r\nfunction LogIn({ onLoginSuccess }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // const loginwithgoole = () => {\r\n  //   window.open(\"http://localhost:8080/auth/google\", \"_self\");\r\n  // }\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8080/auth/google', { withCredentials: true });\r\n      if (response.data.success) {\r\n        localStorage.setItem('sessionId', response.data.sessionId);\r\n        localStorage.setItem('user', JSON.stringify(response.data.user));\r\n        handleSuccess('Google login successful!');\r\n        navigate('/'); // Redirect to your desired route\r\n      } else {\r\n        handleError(response.data.error || 'Failed to authenticate with Google.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Google login error:', error);\r\n      handleError('An error occurred during Google login. Please try again.');\r\n    }\r\n  };\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const formData = { email, password };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n      const { success, message, token, username,error } = data;\r\n\r\n      if (response.ok && success && token) {\r\n        handleSuccess(message);\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"loggedInUser\", username);\r\n        localStorage.setItem(\"isLoggedIn\", true);\r\n        onLoginSuccess();\r\n        setTimeout(() => {\r\n          navigate('/'); // Redirect after successful login\r\n        }, 1000);\r\n      } else {\r\n        setError(error || 'Invalid credentials');\r\n      } \r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError('An error occurred. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <h1 className=\"login-heading\">Log In</h1>\r\n        {error && <p className=\"error-text\" style={{ color: 'red' }}>{error}</p>}\r\n        <form className=\"form-container\" onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\" className=\"labels\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              className=\"input\"\r\n              placeholder=\"Enter your email\"\r\n              required\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\" className=\"labels\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"input\"\r\n              placeholder=\"Enter your password\"\r\n              required\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              onBlur={(e) => {\r\n                if (!e.target.value) setError('Password is required');\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"remember-forgot-container\">\r\n            {/* <div>\r\n              <input type=\"checkbox\" id=\"remember\" />\r\n              <label htmlFor=\"remember\" className=\"remember\"> Remember Me</label>\r\n            </div> */}\r\n            <Link to=\"/forgot-password\" className=\"forgot\">Forgot Password?</Link>\r\n          </div>\r\n          <button type=\"submit\" className=\"log-in-btn\">Log In</button>\r\n          <div className=\"social-container\">\r\n            <button type=\"button\" className=\"social-btn\" onClick = {handleGoogleLogin}>\r\n              <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6WwgH7Nl5_AW9nDCnR2Ozb_AU3rkIbSJdAg&s\" alt=\"Google\" className=\"social-icon\" />\r\n              Google\r\n            </button>\r\n            <button type=\"button\" className=\"social-btn\">\r\n              <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQiXN9xSEe8unzPBEQOeAKXd9Q55efGHGB9BA&s\" alt=\"Facebook\" className=\"social-icon\" />\r\n              Facebook\r\n            </button>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <Link to=\"/signup\" className=\"link-button\">Don't have an account? Sign up</Link>\r\n          </div>\r\n        </form>\r\n        <ToastContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { handleSuccess, handleError } from '../utils.js';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { ToastContainer } from 'react-toastify';\r\n// import './LogIn.css';\r\n\r\n// function LogIn({ onLoginSuccess }) {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   // Google login handler\r\n//   const loginWithGoogle = () => {\r\n//     window.open(\"http://localhost:8080/auth/google\", \"_self\");\r\n//   };\r\n\r\n//   // Fetch authenticated user details after Google sign-in\r\n//   const fetchUserDetails = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:8080/auth/user', {\r\n//         method: 'GET',\r\n//         credentials: 'include', // Include session cookies\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         const data = await response.json();\r\n//         const { token, username } = data;\r\n\r\n//         // Store details in localStorage\r\n//         localStorage.setItem(\"token\", token);\r\n//         localStorage.setItem(\"loggedInUser\", username);\r\n//         localStorage.setItem(\"isLoggedIn\", true);\r\n\r\n//         handleSuccess('Google login successful!');\r\n//         onLoginSuccess();\r\n//         navigate('/'); // Redirect to home page\r\n//       } else {\r\n//         setError('Failed to fetch user details. Please try again.');\r\n//       }\r\n//     } catch (err) {\r\n//       console.error('Error fetching user details:', err);\r\n//       setError('An error occurred. Please try again later.');\r\n//     }\r\n//   };\r\n\r\n//   // Trigger user data fetch if redirected from Google\r\n//   useEffect(() => {\r\n//     fetchUserDetails();\r\n//   }, []);\r\n\r\n//   // Form submission handler\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     setError(''); // Clear previous errors\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:8080/auth/login', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({ email, password }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       if (response.ok && data.success) {\r\n//         handleSuccess(data.message);\r\n//         localStorage.setItem(\"token\", data.token);\r\n//         localStorage.setItem(\"loggedInUser\", data.username);\r\n//         localStorage.setItem(\"isLoggedIn\", true);\r\n\r\n//         // Notify parent component and navigate\r\n//         onLoginSuccess();\r\n//         setTimeout(() => navigate('/'), 1000);\r\n//       } else {\r\n//         setError(data.error || 'Invalid credentials');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//       setError('An error occurred. Please try again later.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-page\">\r\n//       <div className=\"login-container\">\r\n//         <h1 className=\"login-heading\">Log In</h1>\r\n//         {error && <p className=\"error-text\" style={{ color: 'red' }}>{error}</p>}\r\n\r\n//         <form className=\"form-container\" onSubmit={handleSubmit}>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"email\" className=\"labels\">Email</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               id=\"email\"\r\n//               className=\"input\"\r\n//               placeholder=\"Enter your email\"\r\n//               required\r\n//               value={email}\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//               autoFocus\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"password\" className=\"labels\">Password</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               id=\"password\"\r\n//               className=\"input\"\r\n//               placeholder=\"Enter your password\"\r\n//               required\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//               onBlur={(e) => {\r\n//                 if (!e.target.value) setError('Password is required');\r\n//               }}\r\n//             />\r\n//           </div>\r\n//           <div className=\"remember-forgot-container\">\r\n//             <Link to=\"/forgot-password\" className=\"forgot\">Forgot Password?</Link>\r\n//           </div>\r\n//           <button type=\"submit\" className=\"log-in-btn\">Log In</button>\r\n\r\n//           <div className=\"social-container\">\r\n//             <button type=\"button\" className=\"social-btn\" onClick={loginWithGoogle}>\r\n//               <img\r\n//                 src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6WwgH7Nl5_AW9nDCnR2Ozb_AU3rkIbSJdAg&s\"\r\n//                 alt=\"Google\"\r\n//                 className=\"social-icon\"\r\n//               />\r\n//               Google\r\n//             </button>\r\n//             <button type=\"button\" className=\"social-btn\">\r\n//               <img\r\n//                 src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQiXN9xSEe8unzPBEQOeAKXd9Q55efGHGB9BA&s\"\r\n//                 alt=\"Facebook\"\r\n//                 className=\"social-icon\"\r\n//               />\r\n//               Facebook\r\n//             </button>\r\n//           </div>\r\n\r\n//           <div className=\"text-center\">\r\n//             <Link to=\"/signup\" className=\"link-button\">Don't have an account? Sign up</Link>\r\n//           </div>\r\n//         </form>\r\n//         <ToastContainer />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LogIn;\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
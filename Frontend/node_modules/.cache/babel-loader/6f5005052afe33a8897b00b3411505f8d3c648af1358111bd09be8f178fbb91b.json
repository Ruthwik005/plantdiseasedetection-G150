{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { handleError } from '../utils.js';\nconst useAuth = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkToken = () => {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        const decodedToken = JSON.parse(atob(token.split('.')[1]));\n        const exp = decodedToken.exp * 1000; // Convert to milliseconds\n        if (Date.now() >= exp) {\n          handleError('Your session has expired. Please log in again.');\n          localStorage.removeItem(\"token\");\n          localStorage.removeItem(\"loggedInUser\");\n          navigate('/home');\n        }\n      }\n    };\n    const intervalId = setInterval(checkToken, 60000); // Check every minute\n    return () => clearInterval(intervalId);\n  }, [navigate]);\n};\n_s(useAuth, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\nexport default useAuth;","map":{"version":3,"names":["useEffect","useNavigate","handleError","useAuth","_s","navigate","checkToken","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","exp","Date","now","removeItem","intervalId","setInterval","clearInterval"],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { handleError } from '../utils.js';\r\n\r\nconst useAuth = () => {\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const checkToken = () => {\r\n            const token = localStorage.getItem(\"token\");\r\n            if (token) {\r\n                const decodedToken = JSON.parse(atob(token.split('.')[1]));\r\n                const exp = decodedToken.exp * 1000; // Convert to milliseconds\r\n                if (Date.now() >= exp) {\r\n                    handleError('Your session has expired. Please log in again.');\r\n                    localStorage.removeItem(\"token\");\r\n                    localStorage.removeItem(\"loggedInUser\");\r\n                    navigate('/home');\r\n                }\r\n            }\r\n        };\r\n\r\n        const intervalId = setInterval(checkToken, 60000); // Check every minute\r\n        return () => clearInterval(intervalId);\r\n    }, [navigate]);\r\n};\r\n\r\nexport default useAuth;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AAEzC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMM,UAAU,GAAGA,CAAA,KAAM;MACrB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACP,MAAMG,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAMC,GAAG,GAAGL,YAAY,CAACK,GAAG,GAAG,IAAI,CAAC,CAAC;QACrC,IAAIC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIF,GAAG,EAAE;UACnBb,WAAW,CAAC,gDAAgD,CAAC;UAC7DM,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;UAChCV,YAAY,CAACU,UAAU,CAAC,cAAc,CAAC;UACvCb,QAAQ,CAAC,OAAO,CAAC;QACrB;MACJ;IACJ,CAAC;IAED,MAAMc,UAAU,GAAGC,WAAW,CAACd,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;IACnD,OAAO,MAAMe,aAAa,CAACF,UAAU,CAAC;EAC1C,CAAC,EAAE,CAACd,QAAQ,CAAC,CAAC;AAClB,CAAC;AAACD,EAAA,CArBID,OAAO;EAAA,QACQF,WAAW;AAAA;AAsBhC,eAAeE,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
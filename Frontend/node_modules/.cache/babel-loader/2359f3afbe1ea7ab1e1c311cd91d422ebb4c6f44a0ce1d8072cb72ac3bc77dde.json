{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chama\\\\OneDrive\\\\Desktop\\\\plantdiseasedetection1\\\\Frontend\\\\src\\\\Components\\\\LogIn.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { handleSuccess, handleError } from '../utils.js'; // Ensure utils is correctly imported\n// import { Link, useNavigate } from 'react-router-dom';\n// import { ToastContainer } from 'react-toastify';\n// // import { useGoogleLogin } from '@react-oauth/google';\n// import './LogIn.css';\n// // import { googleAuth } from './api';\n\n// function LogIn() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   const loginwithgoole = () =>{\n//     window.open(\"http://localhost:8080/auth/google/callback\" , \"_self\");\n//   }\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const formData = { email, password };\n\n//     try {\n//       const response = await fetch('http://localhost:8080/auth/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(formData),\n//       });\n\n//       const data = await response.json();\n//       const { success, message, token, username,error } = data;\n\n//       if (response.ok && success && token) {\n//         handleSuccess(message);\n//         localStorage.setItem(\"token\", token);\n//         localStorage.setItem(\"loggedInUser\", username);\n\n//         setTimeout(() => {\n//           navigate('/'); // Redirect after successful login\n//         }, 1000);\n//       } else {\n//         setError(error || 'Invalid credentials');\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//       setError('An error occurred. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-page\">\n//       <div className=\"login-container\">\n//         <h1 className=\"login-heading\">Log In</h1>\n//         {error && <p className=\"error-text\" style={{ color: 'red' }}>{error}</p>}\n//         <form className=\"form-container\" onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"email\" className=\"labels\">Email</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               className=\"input\"\n//               placeholder=\"Enter your email\"\n//               required\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               autoFocus\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"password\" className=\"labels\">Password</label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               className=\"input\"\n//               placeholder=\"Enter your password\"\n//               required\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               onBlur={(e) => {\n//                 if (!e.target.value) setError('Password is required');\n//               }}\n//             />\n//           </div>\n//           <div className=\"remember-forgot-container\">\n//             {/* <div>\n//               <input type=\"checkbox\" id=\"remember\" />\n//               <label htmlFor=\"remember\" className=\"remember\"> Remember Me</label>\n//             </div> */}\n//             <Link to=\"/forgot-password\" className=\"forgot\">Forgot Password?</Link>\n//           </div>\n//           <button type=\"submit\" className=\"log-in-btn\">Log In</button>\n//           <div className=\"social-container\">\n//             <button type=\"button\" className=\"social-btn\" onClick = {loginwithgoole}>\n//               <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6WwgH7Nl5_AW9nDCnR2Ozb_AU3rkIbSJdAg&s\" alt=\"Google\" className=\"social-icon\" />\n//               Google\n//             </button>\n//             <button type=\"button\" className=\"social-btn\">\n//               <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQiXN9xSEe8unzPBEQOeAKXd9Q55efGHGB9BA&s\" alt=\"Facebook\" className=\"social-icon\" />\n//               Facebook\n//             </button>\n//           </div>\n//           <div className=\"text-center\">\n//             <Link to=\"/signup\" className=\"link-button\">Don't have an account? Sign up</Link>\n//           </div>\n//         </form>\n//         <ToastContainer />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default LogIn;\n\nimport React, { useState } from 'react';\nimport { handleSuccess, handleError } from '../utils.js'; // Ensure utils is correctly imported\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport './LogIn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LogIn({\n  onManualLogin\n}) {\n  _s();\n  // Accept handleManualLogin prop\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const loginwithgoogle = () => {\n    window.open(\"http://localhost:8080/auth/google/callback\", \"_self\");\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = {\n      email,\n      password\n    };\n    try {\n      const response = await fetch('http://localhost:8080/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      const {\n        success,\n        message,\n        token,\n        username,\n        error\n      } = data;\n      if (response.ok && success && token) {\n        // Manual login success\n        handleSuccess(message);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"loggedInUser\", username);\n        // Update login status using the passed handler from App component\n        onManualLogin(email, password);\n        setTimeout(() => {\n          navigate('/'); // Redirect after successful login\n        }, 1000);\n      } else {\n        setError(error || 'Invalid credentials');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('An error occurred. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"login-heading\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-container\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"labels\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            className: \"input\",\n            placeholder: \"Enter your email\",\n            required: true,\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"labels\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            className: \"input\",\n            placeholder: \"Enter your password\",\n            required: true,\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            onBlur: e => {\n              if (!e.target.value) setError('Password is required');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remember-forgot-container\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot-password\",\n            className: \"forgot\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"log-in-btn\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"social-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"social-btn\",\n            onClick: loginwithgoogle,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6WwgH7Nl5_AW9nDCnR2Ozb_AU3rkIbSJdAg&s\",\n              alt: \"Google\",\n              className: \"social-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), \"Google\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"social-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQiXN9xSEe8unzPBEQOeAKXd9Q55efGHGB9BA&s\",\n              alt: \"Facebook\",\n              className: \"social-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), \"Facebook\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            className: \"link-button\",\n            children: \"Don't have an account? Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_s(LogIn, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = LogIn;\nexport default LogIn;\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["React","useState","handleSuccess","handleError","Link","useNavigate","ToastContainer","jsxDEV","_jsxDEV","LogIn","onManualLogin","_s","email","setEmail","password","setPassword","error","setError","navigate","loginwithgoogle","window","open","handleSubmit","event","preventDefault","formData","response","fetch","method","headers","body","JSON","stringify","data","json","success","message","token","username","ok","localStorage","setItem","setTimeout","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","htmlFor","type","id","placeholder","required","value","onChange","e","target","autoFocus","onBlur","to","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Components/LogIn.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { handleSuccess, handleError } from '../utils.js'; // Ensure utils is correctly imported\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { ToastContainer } from 'react-toastify';\r\n// // import { useGoogleLogin } from '@react-oauth/google';\r\n// import './LogIn.css';\r\n// // import { googleAuth } from './api';\r\n\r\n// function LogIn() {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const loginwithgoole = () =>{\r\n//     window.open(\"http://localhost:8080/auth/google/callback\" , \"_self\");\r\n//   }\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     const formData = { email, password };\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:8080/auth/login', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(formData),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       const { success, message, token, username,error } = data;\r\n\r\n//       if (response.ok && success && token) {\r\n//         handleSuccess(message);\r\n//         localStorage.setItem(\"token\", token);\r\n//         localStorage.setItem(\"loggedInUser\", username);\r\n\r\n//         setTimeout(() => {\r\n//           navigate('/'); // Redirect after successful login\r\n//         }, 1000);\r\n//       } else {\r\n//         setError(error || 'Invalid credentials');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//       setError('An error occurred. Please try again later.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-page\">\r\n//       <div className=\"login-container\">\r\n//         <h1 className=\"login-heading\">Log In</h1>\r\n//         {error && <p className=\"error-text\" style={{ color: 'red' }}>{error}</p>}\r\n//         <form className=\"form-container\" onSubmit={handleSubmit}>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"email\" className=\"labels\">Email</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               id=\"email\"\r\n//               className=\"input\"\r\n//               placeholder=\"Enter your email\"\r\n//               required\r\n//               value={email}\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//               autoFocus\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"password\" className=\"labels\">Password</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               id=\"password\"\r\n//               className=\"input\"\r\n//               placeholder=\"Enter your password\"\r\n//               required\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//               onBlur={(e) => {\r\n//                 if (!e.target.value) setError('Password is required');\r\n//               }}\r\n//             />\r\n//           </div>\r\n//           <div className=\"remember-forgot-container\">\r\n//             {/* <div>\r\n//               <input type=\"checkbox\" id=\"remember\" />\r\n//               <label htmlFor=\"remember\" className=\"remember\"> Remember Me</label>\r\n//             </div> */}\r\n//             <Link to=\"/forgot-password\" className=\"forgot\">Forgot Password?</Link>\r\n//           </div>\r\n//           <button type=\"submit\" className=\"log-in-btn\">Log In</button>\r\n//           <div className=\"social-container\">\r\n//             <button type=\"button\" className=\"social-btn\" onClick = {loginwithgoole}>\r\n//               <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6WwgH7Nl5_AW9nDCnR2Ozb_AU3rkIbSJdAg&s\" alt=\"Google\" className=\"social-icon\" />\r\n//               Google\r\n//             </button>\r\n//             <button type=\"button\" className=\"social-btn\">\r\n//               <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQiXN9xSEe8unzPBEQOeAKXd9Q55efGHGB9BA&s\" alt=\"Facebook\" className=\"social-icon\" />\r\n//               Facebook\r\n//             </button>\r\n//           </div>\r\n//           <div className=\"text-center\">\r\n//             <Link to=\"/signup\" className=\"link-button\">Don't have an account? Sign up</Link>\r\n//           </div>\r\n//         </form>\r\n//         <ToastContainer />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LogIn;\r\n\r\nimport React, { useState } from 'react';\r\nimport { handleSuccess, handleError } from '../utils.js'; // Ensure utils is correctly imported\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport './LogIn.css';\r\n\r\nfunction LogIn({ onManualLogin }) {  // Accept handleManualLogin prop\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const loginwithgoogle = () => {\r\n    window.open(\"http://localhost:8080/auth/google/callback\", \"_self\");\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const formData = { email, password };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const { success, message, token, username, error } = data;\r\n\r\n      if (response.ok && success && token) {\r\n        // Manual login success\r\n        handleSuccess(message);\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"loggedInUser\", username);\r\n        // Update login status using the passed handler from App component\r\n        onManualLogin(email, password);\r\n        \r\n        setTimeout(() => {\r\n          navigate('/'); // Redirect after successful login\r\n        }, 1000);\r\n      } else {\r\n        setError(error || 'Invalid credentials');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError('An error occurred. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <h1 className=\"login-heading\">Log In</h1>\r\n        {error && <p className=\"error-text\" style={{ color: 'red' }}>{error}</p>}\r\n        <form className=\"form-container\" onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\" className=\"labels\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              className=\"input\"\r\n              placeholder=\"Enter your email\"\r\n              required\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\" className=\"labels\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"input\"\r\n              placeholder=\"Enter your password\"\r\n              required\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              onBlur={(e) => {\r\n                if (!e.target.value) setError('Password is required');\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"remember-forgot-container\">\r\n            <Link to=\"/forgot-password\" className=\"forgot\">Forgot Password?</Link>\r\n          </div>\r\n          <button type=\"submit\" className=\"log-in-btn\">Log In</button>\r\n          <div className=\"social-container\">\r\n            <button type=\"button\" className=\"social-btn\" onClick={loginwithgoogle}>\r\n              <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6WwgH7Nl5_AW9nDCnR2Ozb_AU3rkIbSJdAg&s\" alt=\"Google\" className=\"social-icon\" />\r\n              Google\r\n            </button>\r\n            <button type=\"button\" className=\"social-btn\">\r\n              <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQiXN9xSEe8unzPBEQOeAKXd9Q55efGHGB9BA&s\" alt=\"Facebook\" className=\"social-icon\" />\r\n              Facebook\r\n            </button>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <Link to=\"/signup\" className=\"link-button\">Don't have an account? Sign up</Link>\r\n          </div>\r\n        </form>\r\n        <ToastContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
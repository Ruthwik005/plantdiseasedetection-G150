{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chama\\\\OneDrive\\\\Desktop\\\\plantdiseasedetection1\\\\Frontend\\\\src\\\\Components\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [userInfo, setUserInfo] = useState(null);\n  const [diagnosisHistory, setDiagnosisHistory] = useState([]);\n\n  // Fetch user info\n  const fetchUserInfo = () => {\n    const userInfoString = localStorage.getItem('loggedInUser'); // Retrieve user info from localStorage\n    if (userInfoString) {\n      setUserInfo(userInfoString); // No need to parse it if it's a plain string\n    }\n  };\n\n  // Fetch diagnosis history\n  const fetchDiagnosisHistory = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/user/diagnosis-history', {\n        withCredentials: true\n      });\n      setDiagnosisHistory(response.data.diagnosisHistory); // Assuming the response contains the diagnosis history\n      console.log(response.data.diagnosisHistory);\n    } catch (error) {\n      console.error('Error fetching diagnosis history:', error);\n    }\n  };\n\n  // useEffect to fetch data on component mount\n  useEffect(() => {\n    fetchUserInfo();\n    fetchDiagnosisHistory();\n  }, []); // Empty array ensures it runs only once when component mounts\n\n  // Function to update diagnosis history after a new diagnosis\n  const addNewDiagnosis = newDiagnosis => {\n    // Optionally, you can optimistically update the state before the fetch\n    setDiagnosisHistory(prevHistory => [newDiagnosis, ...prevHistory]); // Add new diagnosis at the top\n\n    // Re-fetch diagnosis history\n    fetchDiagnosisHistory(); // Refetch after new diagnosis\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), userInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 14\n        }, this), \" \", userInfo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Diagnosis History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), diagnosisHistory.length > 0 ? diagnosisHistory.map(diagnosis => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.historyContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.imageContainer,\n          children: diagnosis.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: diagnosis.imageUrl,\n            alt: diagnosis.diseaseName,\n            style: styles.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.textContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Disease:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 22\n            }, this), \" \", diagnosis.diseaseName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 22\n            }, this), \" \", formatDate(diagnosis.createdAt)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, diagnosis._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No diagnosis history available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No user information available. Please log in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n// Function to format the date\n_s(Profile, \"lymI/IJ/0TNJPgBOUaS8ZJjYQaQ=\");\n_c = Profile;\nconst formatDate = createdAt => {\n  const date = new Date(createdAt);\n  const dateString = date.toLocaleDateString();\n  const timeOptions = {\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: true\n  };\n  const timeString = date.toLocaleTimeString([], timeOptions);\n  return `${dateString} at ${timeString}`;\n};\nconst styles = {\n  historyContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '20px',\n    borderBottom: '1px solid #ddd',\n    paddingBottom: '10px'\n  },\n  imageContainer: {\n    marginRight: '20px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    objectFit: 'cover',\n    borderRadius: '8px'\n  },\n  textContainer: {\n    flex: 1\n  }\n};\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Profile","_s","userInfo","setUserInfo","diagnosisHistory","setDiagnosisHistory","fetchUserInfo","userInfoString","localStorage","getItem","fetchDiagnosisHistory","response","get","withCredentials","data","console","log","error","addNewDiagnosis","newDiagnosis","prevHistory","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","diagnosis","style","styles","historyContainer","imageContainer","imageUrl","src","alt","diseaseName","image","textContainer","formatDate","createdAt","_id","_c","date","Date","dateString","toLocaleDateString","timeOptions","hour","minute","hour12","timeString","toLocaleTimeString","display","alignItems","marginBottom","borderBottom","paddingBottom","marginRight","width","height","objectFit","borderRadius","flex","$RefreshReg$"],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Components/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Profile() {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [diagnosisHistory, setDiagnosisHistory] = useState([]);\r\n\r\n  // Fetch user info\r\n  const fetchUserInfo = () => {\r\n    const userInfoString = localStorage.getItem('loggedInUser'); // Retrieve user info from localStorage\r\n    if (userInfoString) {\r\n      setUserInfo(userInfoString); // No need to parse it if it's a plain string\r\n    }\r\n  };\r\n\r\n  // Fetch diagnosis history\r\n  const fetchDiagnosisHistory = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8080/user/diagnosis-history', { withCredentials: true });\r\n      setDiagnosisHistory(response.data.diagnosisHistory); // Assuming the response contains the diagnosis history\r\n      console.log(response.data.diagnosisHistory);\r\n    } catch (error) {\r\n      console.error('Error fetching diagnosis history:', error);\r\n    }\r\n  };\r\n\r\n  // useEffect to fetch data on component mount\r\n  useEffect(() => {\r\n    fetchUserInfo();\r\n    fetchDiagnosisHistory();\r\n  }, []); // Empty array ensures it runs only once when component mounts\r\n\r\n  // Function to update diagnosis history after a new diagnosis\r\n  const addNewDiagnosis = (newDiagnosis) => {\r\n    // Optionally, you can optimistically update the state before the fetch\r\n    setDiagnosisHistory((prevHistory) => [newDiagnosis, ...prevHistory]); // Add new diagnosis at the top\r\n\r\n    // Re-fetch diagnosis history\r\n    fetchDiagnosisHistory(); // Refetch after new diagnosis\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <h1>Profile Page</h1>\r\n      {userInfo ? (\r\n        <div>\r\n          <p><strong>Username:</strong> {userInfo}</p>\r\n\r\n          {/* Display the diagnosis history */}\r\n          <h2>Diagnosis History</h2>\r\n          {diagnosisHistory.length > 0 ? (\r\n            diagnosisHistory.map((diagnosis) => (\r\n              <div key={diagnosis._id} style={styles.historyContainer}>\r\n                <div style={styles.imageContainer}>\r\n                  {diagnosis.imageUrl && (\r\n                    <img\r\n                      src={diagnosis.imageUrl}\r\n                      alt={diagnosis.diseaseName}\r\n                      style={styles.image}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div style={styles.textContainer}>\r\n                  <p><strong>Disease:</strong> {diagnosis.diseaseName}</p>\r\n                  <p><strong>Date:</strong> {formatDate(diagnosis.createdAt)}</p>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No diagnosis history available.</p>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <p>No user information available. Please log in.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Function to format the date\r\nconst formatDate = (createdAt) => {\r\n  const date = new Date(createdAt);\r\n  const dateString = date.toLocaleDateString();\r\n  const timeOptions = { hour: '2-digit', minute: '2-digit', hour12: true };\r\n  const timeString = date.toLocaleTimeString([], timeOptions);\r\n  return `${dateString} at ${timeString}`;\r\n};\r\n\r\nconst styles = {\r\n  historyContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: '20px',\r\n    borderBottom: '1px solid #ddd',\r\n    paddingBottom: '10px',\r\n  },\r\n  imageContainer: {\r\n    marginRight: '20px',\r\n  },\r\n  image: {\r\n    width: '100px',\r\n    height: '100px',\r\n    objectFit: 'cover',\r\n    borderRadius: '8px',\r\n  },\r\n  textContainer: {\r\n    flex: 1,\r\n  }\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
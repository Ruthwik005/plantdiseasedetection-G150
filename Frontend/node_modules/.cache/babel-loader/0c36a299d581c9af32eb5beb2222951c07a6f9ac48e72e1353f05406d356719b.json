{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom'; // To get token from URL and navigate\n// import './ResetPassword.css';\n\n// const ResetPassword = () => {\n//     const [newPassword, setNewPassword] = useState('');\n//     const [confirmPassword, setConfirmPassword] = useState('');\n//     const [message, setMessage] = useState('');\n//     const [submitted, setSubmitted] = useState(false);\n\n//     const { token } = useParams(); // Retrieve token from URL\n//     const navigate = useNavigate(); // To redirect after successful reset\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         // Validate that passwords match\n//         if (newPassword !== confirmPassword) {\n//             setMessage(\"Passwords do not match.\");\n//             return;\n//         }\n\n//         setSubmitted(true);\n\n//         try {\n//             // Send request to reset password with token and new password\n//             const res = await fetch(`http://localhost:3000/auth/reset-password/:${token}`, {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify({ newPassword })\n//             });\n//             const data = await res.json();\n\n//             if (res.ok) {\n//                 setMessage(\"Password has been reset successfully! Redirecting to login...\");\n//                 setTimeout(() => navigate('/login'), 3000); // Redirect after 3 seconds\n//             } else {\n//                 setMessage(data.error || 'Failed to reset password.');\n//                 setSubmitted(false);\n//             }\n//         } catch (error) {\n//             setMessage('Failed to reset password.');\n//             setSubmitted(false);\n//         }\n//     };\n\n//     return (\n//         <div className=\"reset-password-container\">\n//             <form onSubmit={handleSubmit} className=\"reset-password-form\">\n//                 <h2>Reset Password</h2>\n//                 <p>Enter a new password for your account.</p>\n\n//                 {/* Show success or error message */}\n//                 {message && <p className=\"message\">{message}</p>}\n\n//                 <input\n//                     type=\"password\"\n//                     placeholder=\"New Password\"\n//                     value={newPassword}\n//                     onChange={(e) => setNewPassword(e.target.value)}\n//                     required\n//                 />\n//                 <input\n//                     type=\"password\"\n//                     placeholder=\"Confirm New Password\"\n//                     value={confirmPassword}\n//                     onChange={(e) => setConfirmPassword(e.target.value)}\n//                     required\n//                 />\n\n//                 <button type=\"submit\" disabled={submitted}>\n//                     {submitted ? 'Resetting...' : 'Reset Password'}\n//                 </button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default ResetPassword;","map":{"version":3,"names":[],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Components/ResetPassword.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom'; // To get token from URL and navigate\r\n// import './ResetPassword.css';\r\n\r\n// const ResetPassword = () => {\r\n//     const [newPassword, setNewPassword] = useState('');\r\n//     const [confirmPassword, setConfirmPassword] = useState('');\r\n//     const [message, setMessage] = useState('');\r\n//     const [submitted, setSubmitted] = useState(false);\r\n\r\n//     const { token } = useParams(); // Retrieve token from URL\r\n//     const navigate = useNavigate(); // To redirect after successful reset\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n        \r\n//         // Validate that passwords match\r\n//         if (newPassword !== confirmPassword) {\r\n//             setMessage(\"Passwords do not match.\");\r\n//             return;\r\n//         }\r\n\r\n//         setSubmitted(true);\r\n\r\n//         try {\r\n//             // Send request to reset password with token and new password\r\n//             const res = await fetch(`http://localhost:3000/auth/reset-password/:${token}`, {\r\n//                 method: 'POST',\r\n//                 headers: { 'Content-Type': 'application/json' },\r\n//                 body: JSON.stringify({ newPassword })\r\n//             });\r\n//             const data = await res.json();\r\n\r\n//             if (res.ok) {\r\n//                 setMessage(\"Password has been reset successfully! Redirecting to login...\");\r\n//                 setTimeout(() => navigate('/login'), 3000); // Redirect after 3 seconds\r\n//             } else {\r\n//                 setMessage(data.error || 'Failed to reset password.');\r\n//                 setSubmitted(false);\r\n//             }\r\n//         } catch (error) {\r\n//             setMessage('Failed to reset password.');\r\n//             setSubmitted(false);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"reset-password-container\">\r\n//             <form onSubmit={handleSubmit} className=\"reset-password-form\">\r\n//                 <h2>Reset Password</h2>\r\n//                 <p>Enter a new password for your account.</p>\r\n                \r\n//                 {/* Show success or error message */}\r\n//                 {message && <p className=\"message\">{message}</p>}\r\n                \r\n//                 <input\r\n//                     type=\"password\"\r\n//                     placeholder=\"New Password\"\r\n//                     value={newPassword}\r\n//                     onChange={(e) => setNewPassword(e.target.value)}\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"password\"\r\n//                     placeholder=\"Confirm New Password\"\r\n//                     value={confirmPassword}\r\n//                     onChange={(e) => setConfirmPassword(e.target.value)}\r\n//                     required\r\n//                 />\r\n                \r\n//                 <button type=\"submit\" disabled={submitted}>\r\n//                     {submitted ? 'Resetting...' : 'Reset Password'}\r\n//                 </button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ResetPassword;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
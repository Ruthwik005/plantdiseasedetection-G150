{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { handleSuccess, handleError } from '../utils.js';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { ToastContainer } from 'react-toastify';\n// import axios from 'axios';\n// import './SignUp.css';\n\n// function SignUp() {\n//   const [username, setUsername] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [usernameError, setUsernameError] = useState('');\n//   const [apiError, setApiError] = useState(''); // State for API error messages\n//   const navigate = useNavigate();\n\n//   // Google Login function\n//   const loginWithGoogle = () => {\n//     window.open(\"http://localhost:8080/auth/google\", \"_self\");\n//   };\n\n//   // Handle form submit for normal signup\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const formData = { username, email, password };\n\n//     // Simple validation for username\n//     if (username.trim() === '') {\n//       setUsernameError('Username is required');\n//       return;\n//     } else {\n//       setUsernameError(''); // Clear error if valid\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:8080/auth/signup', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(formData),\n//       });\n\n//       const data = await response.json();\n//       console.log(data); // Log response for debugging\n//       const { success, message, user } = data;\n\n//       if (response.ok && success) {\n//         // Store token and user data in localStorage\n//         // localStorage.setItem('token', token);\n//         // localStorage.setItem('LoggedInUser', JSON.stringify(user));\n//         // localStorage.setItem('isLoggedIn', true);\n//         handleSuccess(message);\n\n//         // Redirect to home or dashboard\n//         setTimeout(() => {\n//           navigate('/login');\n//         }, 2000);\n//       } else {\n//         handleError(data.error); // Use error from server response\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//       handleError('An error occurred. Please try again later.');\n//     }\n//   };\n//     // useEffect(() => {\n//     //   const fetchGoogleLogin = () => {\n//     //     const params = new URLSearchParams(window.location.search);\n//     //     const token = params.get('token');\n//     //     const username = params.get('username');\n//     //     const email = params.get('email');\n\n//     //     if (token && username && email) {\n//     //       // Store the JWT token and user data in localStorage\n//     //       localStorage.setItem('authToken', token);\n//     //       localStorage.setItem('user', JSON.stringify({ username, email }));\n//     //       localStorage.setItem('isLoggedIn', true);\n\n//     //       handleSuccess('Google login successful!');\n//     //       navigate('/'); // Redirect to home or dashboard\n//     //     }\n//     //   };\n\n//     //   fetchGoogleLogin();\n//     // }, [navigate]);\n\n//   return (\n//     <div className=\"signup-page\">\n//       <div className=\"signup-container\">\n//         <h1 className=\"sign-up-heading\">Get Started</h1>\n//         <form className=\"form-container\" onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"name\" className=\"signup-label\">Username</label>\n//             <input\n//               type=\"text\"\n//               id=\"name\"\n//               className=\"signup-input\"\n//               placeholder=\"Enter your username\"\n//               required\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               autoFocus\n//             />\n//             {usernameError && <span className=\"error-text\">{usernameError}</span>}\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"email\" className=\"signup-label\">Email Address</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               className=\"signup-input\"\n//               placeholder=\"Enter your email\"\n//               required\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"password\" className=\"signup-label\">Password</label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               className=\"signup-input\"\n//               placeholder=\"Enter your password\"\n//               required\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//             />\n//           </div>\n\n//           {/* Display the API error message if it exists */}\n//           {apiError && <p className=\"error-text\" style={{ color: 'red' }}>{apiError}</p>}\n\n//           <button type=\"submit\" className=\"signup-btn\">Sign Up</button>\n//         </form>\n//         <ToastContainer />\n//         <p className=\"or-text\">or</p>\n//         <div className=\"social-buttons\">\n//           <button className=\"social-btn\" style={{ backgroundColor: '#f0f0f0' }} onClick={loginWithGoogle}>\n//             <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6WwgH7Nl5_AW9nDCnR2Ozb_AU3rkIbSJdAg&s\" alt=\"Google\" className=\"social-icon\" />\n//               Google\n//           </button>\n//         </div>\n//         <div className=\"text-center\">\n//           <Link to=\"/login\" className=\"link-button\">Have an account? Log in</Link>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default SignUp;","map":{"version":3,"names":[],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Components/SignUp.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { handleSuccess, handleError } from '../utils.js';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { ToastContainer } from 'react-toastify';\r\n// import axios from 'axios';\r\n// import './SignUp.css';\r\n\r\n// function SignUp() {\r\n//   const [username, setUsername] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [usernameError, setUsernameError] = useState('');\r\n//   const [apiError, setApiError] = useState(''); // State for API error messages\r\n//   const navigate = useNavigate();\r\n\r\n//   // Google Login function\r\n//   const loginWithGoogle = () => {\r\n//     window.open(\"http://localhost:8080/auth/google\", \"_self\");\r\n//   };\r\n\r\n//   // Handle form submit for normal signup\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     const formData = { username, email, password };\r\n\r\n//     // Simple validation for username\r\n//     if (username.trim() === '') {\r\n//       setUsernameError('Username is required');\r\n//       return;\r\n//     } else {\r\n//       setUsernameError(''); // Clear error if valid\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:8080/auth/signup', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(formData),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       console.log(data); // Log response for debugging\r\n//       const { success, message, user } = data;\r\n\r\n//       if (response.ok && success) {\r\n//         // Store token and user data in localStorage\r\n//         // localStorage.setItem('token', token);\r\n//         // localStorage.setItem('LoggedInUser', JSON.stringify(user));\r\n//         // localStorage.setItem('isLoggedIn', true);\r\n//         handleSuccess(message);\r\n\r\n//         // Redirect to home or dashboard\r\n//         setTimeout(() => {\r\n//           navigate('/login');\r\n//         }, 2000);\r\n//       } else {\r\n//         handleError(data.error); // Use error from server response\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//       handleError('An error occurred. Please try again later.');\r\n//     }\r\n//   };\r\n//     // useEffect(() => {\r\n//     //   const fetchGoogleLogin = () => {\r\n//     //     const params = new URLSearchParams(window.location.search);\r\n//     //     const token = params.get('token');\r\n//     //     const username = params.get('username');\r\n//     //     const email = params.get('email');\r\n    \r\n//     //     if (token && username && email) {\r\n//     //       // Store the JWT token and user data in localStorage\r\n//     //       localStorage.setItem('authToken', token);\r\n//     //       localStorage.setItem('user', JSON.stringify({ username, email }));\r\n//     //       localStorage.setItem('isLoggedIn', true);\r\n    \r\n//     //       handleSuccess('Google login successful!');\r\n//     //       navigate('/'); // Redirect to home or dashboard\r\n//     //     }\r\n//     //   };\r\n    \r\n//     //   fetchGoogleLogin();\r\n//     // }, [navigate]);\r\n    \r\n//   return (\r\n//     <div className=\"signup-page\">\r\n//       <div className=\"signup-container\">\r\n//         <h1 className=\"sign-up-heading\">Get Started</h1>\r\n//         <form className=\"form-container\" onSubmit={handleSubmit}>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"name\" className=\"signup-label\">Username</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"name\"\r\n//               className=\"signup-input\"\r\n//               placeholder=\"Enter your username\"\r\n//               required\r\n//               value={username}\r\n//               onChange={(e) => setUsername(e.target.value)}\r\n//               autoFocus\r\n//             />\r\n//             {usernameError && <span className=\"error-text\">{usernameError}</span>}\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"email\" className=\"signup-label\">Email Address</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               id=\"email\"\r\n//               className=\"signup-input\"\r\n//               placeholder=\"Enter your email\"\r\n//               required\r\n//               value={email}\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"password\" className=\"signup-label\">Password</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               id=\"password\"\r\n//               className=\"signup-input\"\r\n//               placeholder=\"Enter your password\"\r\n//               required\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Display the API error message if it exists */}\r\n//           {apiError && <p className=\"error-text\" style={{ color: 'red' }}>{apiError}</p>}\r\n          \r\n//           <button type=\"submit\" className=\"signup-btn\">Sign Up</button>\r\n//         </form>\r\n//         <ToastContainer />\r\n//         <p className=\"or-text\">or</p>\r\n//         <div className=\"social-buttons\">\r\n//           <button className=\"social-btn\" style={{ backgroundColor: '#f0f0f0' }} onClick={loginWithGoogle}>\r\n//             <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6WwgH7Nl5_AW9nDCnR2Ozb_AU3rkIbSJdAg&s\" alt=\"Google\" className=\"social-icon\" />\r\n//               Google\r\n//           </button>\r\n//         </div>\r\n//         <div className=\"text-center\">\r\n//           <Link to=\"/login\" className=\"link-button\">Have an account? Log in</Link>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default SignUp;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\n// import { LinkContainer } from 'react-router-bootstrap';\n// import { Link, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n\n// function MyNavbar() {\n//   const [userData, setUserData] = useState(null);\n//   const navigate = useNavigate();\n\n//   const getUser = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:8080/login/success', { withCredentials: true });\n//       if (response.data.user) {\n//         const { username } = response.data.user;\n//         setUserData(username);\n//         localStorage.setItem('loggedInUser', username);\n//       }\n//     } catch (error) {\n//       console.log('User not logged in:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     const user = localStorage.getItem('loggedInUser');\n//     if (user) {\n//       setUserData(user);\n//     } else {\n//       getUser();\n//     }\n//   }, []);\n\n//   const handleLogout = async () => {\n//     try {\n//       await axios.get('http://localhost:8080/logout',{ withCredentials: true });\n//       localStorage.removeItem('loggedInUser');\n//       localStorage.removeItem('token');\n//       localStorage.clear();\n//       setUserData(null);\n//       navigate('/');\n//       window.location.reload();\n//     } catch (error) {\n//       console.log('Error logging out:', error);\n//     }\n//   };\n\n//   return (\n//     <Navbar bg=\"white\" expand=\"lg\" fixed=\"top\">\n//       <Container fluid>\n//         <Navbar.Brand href=\"/\">Navbar</Navbar.Brand>\n//         <Navbar.Toggle aria-controls=\"navbarNavAltMarkup\" />\n//         <Navbar.Collapse id=\"navbarNavAltMarkup\">\n//           <Nav className=\"ms-auto\">\n//             <Nav.Link href=\"#sectionHome\" className=\"active\">Home</Nav.Link>\n//             <Nav.Link href=\"#sectionKeyFeatures\">Key Features</Nav.Link>\n//             <Nav.Link href=\"#sectionUploadAndDiagnosis\">Upload and Diagnostic</Nav.Link>\n//             <Nav.Link href=\"#\">Follow Us</Nav.Link>\n\n//             {userData ? (\n//               <NavDropdown title={userData} id=\"usernameDropdown\">\n//                 <LinkContainer to=\"/profile\">\n//                   <NavDropdown.Item>Profile</NavDropdown.Item>\n//                 </LinkContainer>\n//                 <NavDropdown.Item onClick={handleLogout} className=\"text-danger\">\n//                   Logout\n//                 </NavDropdown.Item>\n//               </NavDropdown>\n//             ) : (\n//               <Link to=\"/signup\" className=\"nav-link\">Sign Up</Link>\n//             )}\n//           </Nav>\n//         </Navbar.Collapse>\n//       </Container>\n//     </Navbar>\n//   );\n// }\n\n// export default MyNavbar;","map":{"version":3,"names":[],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Components/Navbar.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\n// import { LinkContainer } from 'react-router-bootstrap';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// function MyNavbar() {\r\n//   const [userData, setUserData] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   const getUser = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:8080/login/success', { withCredentials: true });\r\n//       if (response.data.user) {\r\n//         const { username } = response.data.user;\r\n//         setUserData(username);\r\n//         localStorage.setItem('loggedInUser', username);\r\n//       }\r\n//     } catch (error) {\r\n//       console.log('User not logged in:', error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const user = localStorage.getItem('loggedInUser');\r\n//     if (user) {\r\n//       setUserData(user);\r\n//     } else {\r\n//       getUser();\r\n//     }\r\n//   }, []);\r\n\r\n//   const handleLogout = async () => {\r\n//     try {\r\n//       await axios.get('http://localhost:8080/logout',{ withCredentials: true });\r\n//       localStorage.removeItem('loggedInUser');\r\n//       localStorage.removeItem('token');\r\n//       localStorage.clear();\r\n//       setUserData(null);\r\n//       navigate('/');\r\n//       window.location.reload();\r\n//     } catch (error) {\r\n//       console.log('Error logging out:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Navbar bg=\"white\" expand=\"lg\" fixed=\"top\">\r\n//       <Container fluid>\r\n//         <Navbar.Brand href=\"/\">Navbar</Navbar.Brand>\r\n//         <Navbar.Toggle aria-controls=\"navbarNavAltMarkup\" />\r\n//         <Navbar.Collapse id=\"navbarNavAltMarkup\">\r\n//           <Nav className=\"ms-auto\">\r\n//             <Nav.Link href=\"#sectionHome\" className=\"active\">Home</Nav.Link>\r\n//             <Nav.Link href=\"#sectionKeyFeatures\">Key Features</Nav.Link>\r\n//             <Nav.Link href=\"#sectionUploadAndDiagnosis\">Upload and Diagnostic</Nav.Link>\r\n//             <Nav.Link href=\"#\">Follow Us</Nav.Link>\r\n\r\n//             {userData ? (\r\n//               <NavDropdown title={userData} id=\"usernameDropdown\">\r\n//                 <LinkContainer to=\"/profile\">\r\n//                   <NavDropdown.Item>Profile</NavDropdown.Item>\r\n//                 </LinkContainer>\r\n//                 <NavDropdown.Item onClick={handleLogout} className=\"text-danger\">\r\n//                   Logout\r\n//                 </NavDropdown.Item>\r\n//               </NavDropdown>\r\n//             ) : (\r\n//               <Link to=\"/signup\" className=\"nav-link\">Sign Up</Link>\r\n//             )}\r\n//           </Nav>\r\n//         </Navbar.Collapse>\r\n//       </Container>\r\n//     </Navbar>\r\n//   );\r\n// }\r\n\r\n// export default MyNavbar;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
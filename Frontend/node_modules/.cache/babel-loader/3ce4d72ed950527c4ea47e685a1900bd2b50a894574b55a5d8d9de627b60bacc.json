{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chama\\\\OneDrive\\\\Desktop\\\\plantdiseasedetection1\\\\Frontend\\\\src\\\\Components\\\\OAuthHandler.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OAuthHandler = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchToken = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/auth/token', {\n          method: 'POST',\n          credentials: 'include',\n          // Ensure cookies are sent for authentication\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch token');\n        }\n        const {\n          token,\n          username,\n          email\n        } = await response.json();\n        const parsedObject = JSON.parse(username);\n\n        // Extract the value of the `username` key\n        const user = parsedObject.username;\n        // Store the token and user data securely in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('LoggedInUser', JSON.stringify({\n          username\n        }));\n        localStorage.setItem('isLoggedIn', true);\n\n        // Navigate to the dashboard or home page\n        navigate('/');\n      } catch (error) {\n        console.error('Error fetching token:', error.message);\n        navigate('/'); // Redirect to login if token fetching fails\n      }\n    };\n    fetchToken();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this); // Show a loading indicator while fetching the token\n};\n_s(OAuthHandler, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = OAuthHandler;\nexport default OAuthHandler;\nvar _c;\n$RefreshReg$(_c, \"OAuthHandler\");","map":{"version":3,"names":["React","useEffect","useNavigate","jsxDEV","_jsxDEV","OAuthHandler","_s","navigate","fetchToken","response","fetch","method","credentials","headers","ok","Error","token","username","email","json","parsedObject","JSON","parse","user","localStorage","setItem","stringify","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Components/OAuthHandler.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst OAuthHandler = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchToken = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/auth/token', {\r\n          method: 'POST',\r\n          credentials: 'include', // Ensure cookies are sent for authentication\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch token');\r\n        }\r\n\r\n        const { token, username, email } = await response.json();\r\n        const parsedObject = JSON.parse(username);\r\n\r\n// Extract the value of the `username` key\r\n        const user = parsedObject.username;\r\n        // Store the token and user data securely in localStorage\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('LoggedInUser', JSON.stringify({ username }));\r\n        localStorage.setItem('isLoggedIn', true);\r\n\r\n        // Navigate to the dashboard or home page\r\n        navigate('/');\r\n      } catch (error) {\r\n        console.error('Error fetching token:', error.message);\r\n        navigate('/'); // Redirect to login if token fetching fails\r\n      }\r\n    };\r\n\r\n    fetchToken();\r\n  }, [navigate]);\r\n\r\n  return <div>Loading...</div>; // Show a loading indicator while fetching the token\r\n};\r\n\r\nexport default OAuthHandler;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;UAC/DC,MAAM,EAAE,MAAM;UACdC,WAAW,EAAE,SAAS;UAAE;UACxBC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QAEA,MAAM;UAAEC,KAAK;UAAEC,QAAQ;UAAEC;QAAM,CAAC,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACxD,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;;QAEjD;QACQ,MAAMM,IAAI,GAAGH,YAAY,CAACH,QAAQ;QAClC;QACAO,YAAY,CAACC,OAAO,CAAC,OAAO,EAAET,KAAK,CAAC;QACpCQ,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEJ,IAAI,CAACK,SAAS,CAAC;UAAET;QAAS,CAAC,CAAC,CAAC;QAClEO,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC;;QAExC;QACAlB,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,CAAC,OAAOoB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;QACrDtB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACjB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBAAOH,OAAA;IAAA0B,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,CAAC,CAAC;AAChC,CAAC;AAAC5B,EAAA,CAxCID,YAAY;EAAA,QACCH,WAAW;AAAA;AAAAiC,EAAA,GADxB9B,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
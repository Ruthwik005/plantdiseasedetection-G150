{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './Api.css';\n\n// function Api() {\n//   const [file, setFile] = useState(null);\n//   const [result, setResult] = useState(null);\n//   const [errorMessage, setErrorMessage] = useState(''); // State for handling errors\n\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//     setErrorMessage(''); // Clear any existing error messages when file changes\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!file) {\n//       setErrorMessage('Please select an image file before uploading.');\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('image', file);\n\n//     try {\n//       const response = await axios.post('http://127.0.0.1:5000/api/predict', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n\n//       // Save the result to the database (only if logged in)\n//       const predictionData = response.data;\n//       const token = localStorage.getItem('token'); // Get the token from localStorage\n\n//       if (token) {\n//         // Proceed to save the diagnosis history if logged in\n//         await axios.post(\n//           'http://localhost:8080/upload-and-diagnose',\n//           {\n//             diseaseName: predictionData.title,\n//             imageUrl: predictionData.image_url,\n//             token, // Send the token in the request body\n//           },\n//           {\n//             withCredentials: true, // Ensure the session cookie is included (if necessary)\n//           }\n//         );\n//       }\n\n//       setResult(predictionData);\n//       setErrorMessage(''); // Clear errors on success\n//     } catch (error) {\n//       if (error.response && error.response.data && error.response.data.error) {\n//         setErrorMessage(error.response.data.error); // Display backend error message\n//       } else {\n//         setErrorMessage('An unexpected error occurred. Please try again.');\n//       }\n//       setResult(null); // Clear the result if an error occurs\n//     }\n//   };\n\n//   return (\n//     <div className=\"main\">\n//       <h1 className=\"main-heading\">Plant Disease Detector</h1>\n\n//       <form onSubmit={handleSubmit} className=\"form\">\n//         <input type=\"file\" className=\"choose\" onChange={handleFileChange} />\n//         <br />\n//         <br />\n//         <button type=\"submit\" className=\"upload\">\n//           Upload\n//         </button>\n//       </form>\n\n//       {/* Display error message if any */}\n//       {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n//       {/* Display prediction result if available */}\n//       {result && (\n//         <div className=\"container result\">\n//           <div className=\"row\">\n//             <h2 className=\"prediction-result col col-12\">Prediction Result</h2>\n\n//             <div className=\"col-6 div\">\n//               <p className=\"disease\">Disease:</p>\n//               <p className=\"disease-des\">{result.title}</p>\n//             </div>\n//             <div className=\"col-6 image-div\">\n//               <img className=\"image\" src={result.image_url} alt=\"Disease\" />\n//             </div>\n//             <div className=\"col-12 div\">\n//               <p className=\"disease\">Description:</p>\n//               <p className=\"disease-des\">{result.description}</p>\n//             </div>\n//             <div className=\"col-12 div\">\n//               <p className=\"disease\">Prevention:</p>\n//               <p className=\"disease-des\">{result.prevent}</p>\n//             </div>\n\n//             <div className=\"col-12 div\">\n//               <h3 className=\"supplement disease\">Supplement Information</h3>\n//               <p className=\"disease-des\">\n//                 <strong>Supplement:</strong> {result.supplement_name}\n//               </p>\n//             </div>\n//             <div className=\"col-12 div\">\n//               <img\n//                 className=\"supplement-image\"\n//                 src={result.supplement_image_url}\n//                 alt=\"Supplement\"\n//               />\n//               <a href={result.supplement_buy_link} target=\"_blank\" rel=\"noopener noreferrer\">\n//                 Buy Supplement\n//               </a>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Api;\n\n// // import React, { useState } from 'react';\n// // import axios from 'axios';\n// // import './Api.css';\n\n// // function Api() {\n// //   const [file, setFile] = useState(null);\n// //   const [result, setResult] = useState(null);\n// //   const [errorMessage, setErrorMessage] = useState(''); // State for handling errors\n\n// //   const handleFileChange = (e) => {\n// //     setFile(e.target.files[0]);\n// //     setErrorMessage(''); // Clear any existing error messages when file changes\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     if (!file) {\n// //       setErrorMessage('Please select an image file before uploading.');\n// //       return;\n// //     }\n\n// //     const formData = new FormData();\n// //     formData.append('image', file);\n\n// //     try {\n// //       // Upload image and get prediction + Cloudinary URL\n// //       const response = await axios.post('http://127.0.0.1:5000/api/predict', formData, {\n// //         headers: {\n// //           'Content-Type': 'multipart/form-data',\n// //         },\n// //       });\n\n// //       const predictionData = response.data; // Prediction response\n// //       const token = localStorage.getItem('token'); // Get token from localStorage\n\n// //       if (token) {\n// //         // Save diagnosis history to the backend\n// //         await axios.post(\n// //           'http://localhost:8080/upload-and-diagnose',\n// //           {\n// //             diseaseName: predictionData.title,\n// //             imageUrl: predictionData.image_url, // Use Cloudinary URL\n// //             token, // Pass token in the request\n// //           },\n// //           {\n// //             headers: {\n// //               Authorization: `Bearer ${token}`, // Pass token in headers for authentication\n// //             },\n// //           }\n// //         );\n// //       }\n\n// //       // Set result to display prediction\n// //       setResult(predictionData);\n// //       setErrorMessage(''); // Clear errors on success\n// //     } catch (error) {\n// //       if (error.response && error.response.data && error.response.data.error) {\n// //         setErrorMessage(error.response.data.error); // Display backend error message\n// //       } else {\n// //         setErrorMessage('An unexpected error occurred. Please try again.');\n// //       }\n// //       setResult(null); // Clear result if an error occurs\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"main\">\n// //       <h1 className=\"main-heading\">Plant Disease Detector</h1>\n\n// //       <form onSubmit={handleSubmit} className=\"form\">\n// //         <input type=\"file\" className=\"choose\" onChange={handleFileChange} />\n// //         <br />\n// //         <br />\n// //         <button type=\"submit\" className=\"upload\">\n// //           Upload\n// //         </button>\n// //       </form>\n\n// //       {/* Display error message if any */}\n// //       {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n// //       {/* Display prediction result if available */}\n// //       {result && (\n// //         <div className=\"container result\">\n// //           <div className=\"row\">\n// //             <h2 className=\"prediction-result col col-12\">Prediction Result</h2>\n\n// //             <div className=\"col-6 div\">\n// //               <p className=\"disease\">Disease:</p>\n// //               <p className=\"disease-des\">{result.title}</p>\n// //             </div>\n// //             <div className=\"col-6 image-div\">\n// //               <img className=\"image\" src={result.image_url} alt=\"Disease\" />\n// //             </div>\n// //             <div className=\"col-12 div\">\n// //               <p className=\"disease\">Description:</p>\n// //               <p className=\"disease-des\">{result.description}</p>\n// //             </div>\n// //             <div className=\"col-12 div\">\n// //               <p className=\"disease\">Prevention:</p>\n// //               <p className=\"disease-des\">{result.prevent}</p>\n// //             </div>\n\n// //             <div className=\"col-12 div\">\n// //               <h3 className=\"supplement disease\">Supplement Information</h3>\n// //               <p className=\"disease-des\">\n// //                 <strong>Supplement:</strong> {result.supplement_name}\n// //               </p>\n// //             </div>\n// //             <div className=\"col-12 div\">\n// //               <img\n// //                 className=\"supplement-image\"\n// //                 src={result.supplement_image_url}\n// //                 alt=\"Supplement\"\n// //               />\n// //               <a href={result.supplement_buy_link} target=\"_blank\" rel=\"noopener noreferrer\">\n// //                 Buy Supplement\n// //               </a>\n// //             </div>\n// //           </div>\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // }\n\n// // export default Api;","map":{"version":3,"names":[],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Flask/Api.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './Api.css';\n\n// function Api() {\n//   const [file, setFile] = useState(null);\n//   const [result, setResult] = useState(null);\n//   const [errorMessage, setErrorMessage] = useState(''); // State for handling errors\n\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//     setErrorMessage(''); // Clear any existing error messages when file changes\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!file) {\n//       setErrorMessage('Please select an image file before uploading.');\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('image', file);\n\n//     try {\n//       const response = await axios.post('http://127.0.0.1:5000/api/predict', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n\n//       // Save the result to the database (only if logged in)\n//       const predictionData = response.data;\n//       const token = localStorage.getItem('token'); // Get the token from localStorage\n\n//       if (token) {\n//         // Proceed to save the diagnosis history if logged in\n//         await axios.post(\n//           'http://localhost:8080/upload-and-diagnose',\n//           {\n//             diseaseName: predictionData.title,\n//             imageUrl: predictionData.image_url,\n//             token, // Send the token in the request body\n//           },\n//           {\n//             withCredentials: true, // Ensure the session cookie is included (if necessary)\n//           }\n//         );\n//       }\n\n//       setResult(predictionData);\n//       setErrorMessage(''); // Clear errors on success\n//     } catch (error) {\n//       if (error.response && error.response.data && error.response.data.error) {\n//         setErrorMessage(error.response.data.error); // Display backend error message\n//       } else {\n//         setErrorMessage('An unexpected error occurred. Please try again.');\n//       }\n//       setResult(null); // Clear the result if an error occurs\n//     }\n//   };\n\n//   return (\n//     <div className=\"main\">\n//       <h1 className=\"main-heading\">Plant Disease Detector</h1>\n\n//       <form onSubmit={handleSubmit} className=\"form\">\n//         <input type=\"file\" className=\"choose\" onChange={handleFileChange} />\n//         <br />\n//         <br />\n//         <button type=\"submit\" className=\"upload\">\n//           Upload\n//         </button>\n//       </form>\n\n//       {/* Display error message if any */}\n//       {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n//       {/* Display prediction result if available */}\n//       {result && (\n//         <div className=\"container result\">\n//           <div className=\"row\">\n//             <h2 className=\"prediction-result col col-12\">Prediction Result</h2>\n\n//             <div className=\"col-6 div\">\n//               <p className=\"disease\">Disease:</p>\n//               <p className=\"disease-des\">{result.title}</p>\n//             </div>\n//             <div className=\"col-6 image-div\">\n//               <img className=\"image\" src={result.image_url} alt=\"Disease\" />\n//             </div>\n//             <div className=\"col-12 div\">\n//               <p className=\"disease\">Description:</p>\n//               <p className=\"disease-des\">{result.description}</p>\n//             </div>\n//             <div className=\"col-12 div\">\n//               <p className=\"disease\">Prevention:</p>\n//               <p className=\"disease-des\">{result.prevent}</p>\n//             </div>\n\n//             <div className=\"col-12 div\">\n//               <h3 className=\"supplement disease\">Supplement Information</h3>\n//               <p className=\"disease-des\">\n//                 <strong>Supplement:</strong> {result.supplement_name}\n//               </p>\n//             </div>\n//             <div className=\"col-12 div\">\n//               <img\n//                 className=\"supplement-image\"\n//                 src={result.supplement_image_url}\n//                 alt=\"Supplement\"\n//               />\n//               <a href={result.supplement_buy_link} target=\"_blank\" rel=\"noopener noreferrer\">\n//                 Buy Supplement\n//               </a>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Api;\n\n\n// // import React, { useState } from 'react';\n// // import axios from 'axios';\n// // import './Api.css';\n\n// // function Api() {\n// //   const [file, setFile] = useState(null);\n// //   const [result, setResult] = useState(null);\n// //   const [errorMessage, setErrorMessage] = useState(''); // State for handling errors\n\n// //   const handleFileChange = (e) => {\n// //     setFile(e.target.files[0]);\n// //     setErrorMessage(''); // Clear any existing error messages when file changes\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     if (!file) {\n// //       setErrorMessage('Please select an image file before uploading.');\n// //       return;\n// //     }\n\n// //     const formData = new FormData();\n// //     formData.append('image', file);\n\n// //     try {\n// //       // Upload image and get prediction + Cloudinary URL\n// //       const response = await axios.post('http://127.0.0.1:5000/api/predict', formData, {\n// //         headers: {\n// //           'Content-Type': 'multipart/form-data',\n// //         },\n// //       });\n\n// //       const predictionData = response.data; // Prediction response\n// //       const token = localStorage.getItem('token'); // Get token from localStorage\n\n// //       if (token) {\n// //         // Save diagnosis history to the backend\n// //         await axios.post(\n// //           'http://localhost:8080/upload-and-diagnose',\n// //           {\n// //             diseaseName: predictionData.title,\n// //             imageUrl: predictionData.image_url, // Use Cloudinary URL\n// //             token, // Pass token in the request\n// //           },\n// //           {\n// //             headers: {\n// //               Authorization: `Bearer ${token}`, // Pass token in headers for authentication\n// //             },\n// //           }\n// //         );\n// //       }\n\n// //       // Set result to display prediction\n// //       setResult(predictionData);\n// //       setErrorMessage(''); // Clear errors on success\n// //     } catch (error) {\n// //       if (error.response && error.response.data && error.response.data.error) {\n// //         setErrorMessage(error.response.data.error); // Display backend error message\n// //       } else {\n// //         setErrorMessage('An unexpected error occurred. Please try again.');\n// //       }\n// //       setResult(null); // Clear result if an error occurs\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"main\">\n// //       <h1 className=\"main-heading\">Plant Disease Detector</h1>\n\n// //       <form onSubmit={handleSubmit} className=\"form\">\n// //         <input type=\"file\" className=\"choose\" onChange={handleFileChange} />\n// //         <br />\n// //         <br />\n// //         <button type=\"submit\" className=\"upload\">\n// //           Upload\n// //         </button>\n// //       </form>\n\n// //       {/* Display error message if any */}\n// //       {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n// //       {/* Display prediction result if available */}\n// //       {result && (\n// //         <div className=\"container result\">\n// //           <div className=\"row\">\n// //             <h2 className=\"prediction-result col col-12\">Prediction Result</h2>\n\n// //             <div className=\"col-6 div\">\n// //               <p className=\"disease\">Disease:</p>\n// //               <p className=\"disease-des\">{result.title}</p>\n// //             </div>\n// //             <div className=\"col-6 image-div\">\n// //               <img className=\"image\" src={result.image_url} alt=\"Disease\" />\n// //             </div>\n// //             <div className=\"col-12 div\">\n// //               <p className=\"disease\">Description:</p>\n// //               <p className=\"disease-des\">{result.description}</p>\n// //             </div>\n// //             <div className=\"col-12 div\">\n// //               <p className=\"disease\">Prevention:</p>\n// //               <p className=\"disease-des\">{result.prevent}</p>\n// //             </div>\n\n// //             <div className=\"col-12 div\">\n// //               <h3 className=\"supplement disease\">Supplement Information</h3>\n// //               <p className=\"disease-des\">\n// //                 <strong>Supplement:</strong> {result.supplement_name}\n// //               </p>\n// //             </div>\n// //             <div className=\"col-12 div\">\n// //               <img\n// //                 className=\"supplement-image\"\n// //                 src={result.supplement_image_url}\n// //                 alt=\"Supplement\"\n// //               />\n// //               <a href={result.supplement_buy_link} target=\"_blank\" rel=\"noopener noreferrer\">\n// //                 Buy Supplement\n// //               </a>\n// //             </div>\n// //           </div>\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // }\n\n// // export default Api;\n\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chama\\\\OneDrive\\\\Desktop\\\\plantdiseasedetection1\\\\Frontend\\\\src\\\\Components\\\\Profile.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// function Profile() {\n//   const [userInfo, setUserInfo] = useState(null);\n\n//   useEffect(() => {\n//     const userInfoString = localStorage.getItem('loggedInUser'); // Retrieve user info from localStorage\n//     if (userInfoString) {\n//       setUserInfo(userInfoString); // No need to parse it if it's a plain string\n//     }\n//   }, []);\n\n//   return (\n//     <div className=\"profile-page\">\n//       <h1>Profile Page</h1>\n//       {userInfo ? (\n//         <div>\n//           <p><strong>Username:</strong> {userInfo}</p> {/* Display the username directly */}\n//           {/* Add more user details here */}\n//         </div>\n//       ) : (\n//         <p>No user information available. Please log in.</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Profile;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [userInfo, setUserInfo] = useState(null);\n  const [diagnosisHistory, setDiagnosisHistory] = useState([]);\n  useEffect(() => {\n    const fetchUserInfo = () => {\n      const userInfoString = localStorage.getItem('loggedInUser'); // Retrieve user info from localStorage\n      if (userInfoString) {\n        setUserInfo(userInfoString); // No need to parse it if it's a plain string\n      }\n    };\n    const fetchDiagnosisHistory = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/user/diagnosis-history', {\n          withCredentials: true\n        });\n        setDiagnosisHistory(response.data.diagnosisHistory); // Assuming the response contains the diagnosis history\n      } catch (error) {\n        console.error('Error fetching diagnosis history:', error);\n      }\n    };\n    fetchUserInfo();\n    fetchDiagnosisHistory();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), userInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 14\n        }, this), \" \", userInfo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Diagnosis History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), diagnosisHistory.length > 0 ? diagnosisHistory.map(diagnosis => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Disease:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 20\n          }, this), \" \", diagnosis.diseaseName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), diagnosis.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: diagnosis.imageUrl,\n          alt: diagnosis.diseaseName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, this)]\n      }, diagnosis._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No diagnosis history available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No user information available. Please log in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"lymI/IJ/0TNJPgBOUaS8ZJjYQaQ=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Profile","_s","userInfo","setUserInfo","diagnosisHistory","setDiagnosisHistory","fetchUserInfo","userInfoString","localStorage","getItem","fetchDiagnosisHistory","response","get","withCredentials","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","diagnosis","diseaseName","imageUrl","src","alt","_id","_c","$RefreshReg$"],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Components/Profile.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// function Profile() {\r\n//   const [userInfo, setUserInfo] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const userInfoString = localStorage.getItem('loggedInUser'); // Retrieve user info from localStorage\r\n//     if (userInfoString) {\r\n//       setUserInfo(userInfoString); // No need to parse it if it's a plain string\r\n//     }\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"profile-page\">\r\n//       <h1>Profile Page</h1>\r\n//       {userInfo ? (\r\n//         <div>\r\n//           <p><strong>Username:</strong> {userInfo}</p> {/* Display the username directly */}\r\n//           {/* Add more user details here */}\r\n//         </div>\r\n//       ) : (\r\n//         <p>No user information available. Please log in.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Profile;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Profile() {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [diagnosisHistory, setDiagnosisHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchUserInfo = () => {\r\n      const userInfoString = localStorage.getItem('loggedInUser'); // Retrieve user info from localStorage\r\n      if (userInfoString) {\r\n        setUserInfo(userInfoString); // No need to parse it if it's a plain string\r\n      }\r\n    };\r\n\r\n    const fetchDiagnosisHistory = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/user/diagnosis-history', { withCredentials: true });\r\n        setDiagnosisHistory(response.data.diagnosisHistory); // Assuming the response contains the diagnosis history\r\n      } catch (error) {\r\n        console.error('Error fetching diagnosis history:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserInfo();\r\n    fetchDiagnosisHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <h1>Profile Page</h1>\r\n      {userInfo ? (\r\n        <div>\r\n          <p><strong>Username:</strong> {userInfo}</p>\r\n\r\n          {/* Display the diagnosis history */}\r\n          <h2>Diagnosis History</h2>\r\n          {diagnosisHistory.length > 0 ? (\r\n            diagnosisHistory.map((diagnosis) => (\r\n              <div key={diagnosis._id}>\r\n                <p><strong>Disease:</strong> {diagnosis.diseaseName}</p>\r\n                {diagnosis.imageUrl && (\r\n                  <img src={diagnosis.imageUrl} alt={diagnosis.diseaseName} />\r\n                )}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No diagnosis history available.</p>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <p>No user information available. Please log in.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
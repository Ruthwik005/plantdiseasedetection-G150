{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chama\\\\OneDrive\\\\Desktop\\\\plantdiseasedetection1\\\\Frontend\\\\src\\\\Components\\\\OAuthHandler.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OAuthHandler = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchToken = async () => {\n      try {\n        // const response = await fetch('http://localhost:8080/auth/token', {\n        //   method: 'POST',\n        //   credentials: 'include', // Ensure cookies are sent for authentication\n        //   headers: {\n        //     'Content-Type': 'application/json',\n        //   },\n        // });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch token');\n        }\n        const {\n          token,\n          username,\n          email\n        } = await response.json();\n        // const parsedObject = JSON.parse(username);\n        // const user = parsedObject.username;\n        // Store the token and user data securely in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('LoggedInUser', username);\n        localStorage.setItem('isLoggedIn', true);\n\n        // Navigate to the dashboard or home page\n        navigate('/');\n      } catch (error) {\n        console.error('Error fetching token:', error.message);\n        navigate('/'); // Redirect to login if token fetching fails\n      }\n    };\n    fetchToken();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this); // Show a loading indicator while fetching the token\n};\n_s(OAuthHandler, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = OAuthHandler;\nexport default OAuthHandler;\nvar _c;\n$RefreshReg$(_c, \"OAuthHandler\");","map":{"version":3,"names":["React","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","OAuthHandler","_s","navigate","fetchToken","response","ok","Error","token","username","email","json","localStorage","setItem","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Components/OAuthHandler.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nconst OAuthHandler = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchToken = async () => {\r\n      try {\r\n        // const response = await fetch('http://localhost:8080/auth/token', {\r\n        //   method: 'POST',\r\n        //   credentials: 'include', // Ensure cookies are sent for authentication\r\n        //   headers: {\r\n        //     'Content-Type': 'application/json',\r\n        //   },\r\n        // });\r\n          \r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch token');\r\n        }\r\n\r\n        const { token, username, email } = await response.json();\r\n        // const parsedObject = JSON.parse(username);\r\n        // const user = parsedObject.username;\r\n        // Store the token and user data securely in localStorage\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('LoggedInUser',  username);\r\n        localStorage.setItem('isLoggedIn', true);\r\n\r\n        // Navigate to the dashboard or home page\r\n        navigate('/');\r\n      } catch (error) {\r\n        console.error('Error fetching token:', error.message);\r\n        navigate('/'); // Redirect to login if token fetching fails\r\n      }\r\n    };\r\n\r\n    fetchToken();\r\n  }, [navigate]);\r\n\r\n  return <div>Loading...</div>; // Show a loading indicator while fetching the token\r\n};\r\n\r\nexport default OAuthHandler;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA,IAAI,CAACC,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QAEA,MAAM;UAAEC,KAAK;UAAEC,QAAQ;UAAEC;QAAM,CAAC,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACxD;QACA;QACA;QACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;QACpCI,YAAY,CAACC,OAAO,CAAC,cAAc,EAAGJ,QAAQ,CAAC;QAC/CG,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC;;QAExC;QACAV,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;QACrDb,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACjB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBAAOH,OAAA;IAAAiB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,CAAC,CAAC;AAChC,CAAC;AAACnB,EAAA,CAtCID,YAAY;EAAA,QACCJ,WAAW;AAAA;AAAAyB,EAAA,GADxBrB,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
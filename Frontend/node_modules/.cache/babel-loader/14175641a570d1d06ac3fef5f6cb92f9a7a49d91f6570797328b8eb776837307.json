{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chama\\\\OneDrive\\\\Desktop\\\\plantdiseasedetection1\\\\Frontend\\\\src\\\\Components\\\\Profile.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Profile.css';\n\n// function Profile() {\n//   const [history, setHistory] = useState([]);\n//   const [errorMessage, setErrorMessage] = useState('');\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n\n//     if (!token) {\n//       setErrorMessage('You need to log in to view your profile.');\n//       return;\n//     }\n\n//     axios\n//       .post(\n//         'http://localhost:8080/diagnosis-history',\n//         { token },\n//         { withCredentials: true }\n//       )\n//       .then((response) => {\n//         if (response.data.success) {\n//           setHistory(response.data.history);\n//         } else {\n//           setErrorMessage(response.data.message);\n//         }\n//       })\n//       .catch(() => {\n//         setErrorMessage('Failed to load diagnosis history.');\n//       });\n//   }, []);\n\n//   return (\n//     <div className=\"profile\">\n//       <div className=\"profile-header\">\n//         <h1>Your Diagnosis History</h1>\n//         <p>Explore your results with rich visuals and animations.</p>\n//       </div>\n\n//       {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n//       <div className=\"history-container\">\n//         {history.length > 0 ? (\n//           history.map((item, index) => (\n//             <div className=\"history-row\" key={index}>\n//               <div className=\"content\">\n//                 <h3 className=\"disease-name\">{item.diseaseName}</h3>\n//                 <p className=\"diagnosis-date\">\n//                   Diagnosed on: {new Date(item.createdAt).toLocaleDateString()}\n//                 </p>\n//                 <img\n//                   className=\"disease-image\"\n//                   src={item.imageUrl}\n//                   alt={item.diseaseName}\n//                 />\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p className=\"no-history\">No diagnosis history found.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Profile;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [history, setHistory] = useState([]); // Diagnosis history state\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n  const [isLoading, setIsLoading] = useState(true); // Loading state\n\n  useEffect(() => {\n    const token = localStorage.getItem('token'); // Get token from localStorage\n\n    if (!token) {\n      setErrorMessage('You need to log in to view your profile.');\n      setIsLoading(false);\n      return;\n    }\n\n    // Fetch diagnosis history\n    axios.post('http://localhost:8080/diagnosis-history', {}, {\n      headers: {\n        Authorization: `Bearer ${token}` // Use Authorization header for token\n      }\n    }).then(response => {\n      setIsLoading(false); // Stop loading\n      if (response.data.success) {\n        setHistory(response.data.history); // Set fetched history\n      } else {\n        setErrorMessage(response.data.message); // Display backend error\n      }\n    }).catch(error => {\n      var _error$response, _error$response$data;\n      setIsLoading(false); // Stop loading\n      setErrorMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to load diagnosis history.'); // Display backend or default error\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Diagnosis History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Explore your results with rich visuals and animations.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }, this), errorMessage && !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-container\",\n      children: history.length > 0 && !isLoading ? history.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"disease-name\",\n            children: item.diseaseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"diagnosis-date\",\n            children: [\"Diagnosed on: \", new Date(item.createdAt).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"disease-image\",\n            src: item.imageUrl // Use Cloudinary image URL from the backend\n            ,\n            alt: item.diseaseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)) : !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-history\",\n        children: \"No diagnosis history found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"rsuWXA0d9xdCfQaAKIUTQ/LUzlc=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Profile","_s","history","setHistory","errorMessage","setErrorMessage","isLoading","setIsLoading","token","localStorage","getItem","post","headers","Authorization","then","response","data","success","message","catch","error","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","index","diseaseName","Date","createdAt","toLocaleDateString","src","imageUrl","alt","_c","$RefreshReg$"],"sources":["C:/Users/chama/OneDrive/Desktop/plantdiseasedetection1/Frontend/src/Components/Profile.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import './Profile.css';\r\n\r\n// function Profile() {\r\n//   const [history, setHistory] = useState([]);\r\n//   const [errorMessage, setErrorMessage] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     if (!token) {\r\n//       setErrorMessage('You need to log in to view your profile.');\r\n//       return;\r\n//     }\r\n\r\n//     axios\r\n//       .post(\r\n//         'http://localhost:8080/diagnosis-history',\r\n//         { token },\r\n//         { withCredentials: true }\r\n//       )\r\n//       .then((response) => {\r\n//         if (response.data.success) {\r\n//           setHistory(response.data.history);\r\n//         } else {\r\n//           setErrorMessage(response.data.message);\r\n//         }\r\n//       })\r\n//       .catch(() => {\r\n//         setErrorMessage('Failed to load diagnosis history.');\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"profile\">\r\n//       <div className=\"profile-header\">\r\n//         <h1>Your Diagnosis History</h1>\r\n//         <p>Explore your results with rich visuals and animations.</p>\r\n//       </div>\r\n\r\n//       {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n//       <div className=\"history-container\">\r\n//         {history.length > 0 ? (\r\n//           history.map((item, index) => (\r\n//             <div className=\"history-row\" key={index}>\r\n//               <div className=\"content\">\r\n//                 <h3 className=\"disease-name\">{item.diseaseName}</h3>\r\n//                 <p className=\"diagnosis-date\">\r\n//                   Diagnosed on: {new Date(item.createdAt).toLocaleDateString()}\r\n//                 </p>\r\n//                 <img\r\n//                   className=\"disease-image\"\r\n//                   src={item.imageUrl}\r\n//                   alt={item.diseaseName}\r\n//                 />\r\n//               </div>\r\n//             </div>\r\n//           ))\r\n//         ) : (\r\n//           <p className=\"no-history\">No diagnosis history found.</p>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Profile;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Profile.css';\r\n\r\nfunction Profile() {\r\n  const [history, setHistory] = useState([]); // Diagnosis history state\r\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\r\n  const [isLoading, setIsLoading] = useState(true); // Loading state\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token'); // Get token from localStorage\r\n\r\n    if (!token) {\r\n      setErrorMessage('You need to log in to view your profile.');\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Fetch diagnosis history\r\n    axios\r\n      .post(\r\n        'http://localhost:8080/diagnosis-history',\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Use Authorization header for token\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setIsLoading(false); // Stop loading\r\n        if (response.data.success) {\r\n          setHistory(response.data.history); // Set fetched history\r\n        } else {\r\n          setErrorMessage(response.data.message); // Display backend error\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setIsLoading(false); // Stop loading\r\n        setErrorMessage(\r\n          error.response?.data?.message || 'Failed to load diagnosis history.'\r\n        ); // Display backend or default error\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"profile-header\">\r\n        <h1>Your Diagnosis History</h1>\r\n        <p>Explore your results with rich visuals and animations.</p>\r\n      </div>\r\n\r\n      {/* Show loading spinner while fetching */}\r\n      {isLoading && <div className=\"loading-spinner\">Loading...</div>}\r\n\r\n      {/* Display error message */}\r\n      {errorMessage && !isLoading && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n      {/* Diagnosis history list */}\r\n      <div className=\"history-container\">\r\n        {history.length > 0 && !isLoading ? (\r\n          history.map((item, index) => (\r\n            <div className=\"history-row\" key={index}>\r\n              <div className=\"content\">\r\n                <h3 className=\"disease-name\">{item.diseaseName}</h3>\r\n                <p className=\"diagnosis-date\">\r\n                  Diagnosed on: {new Date(item.createdAt).toLocaleDateString()}\r\n                </p>\r\n                <img\r\n                  className=\"disease-image\"\r\n                  src={item.imageUrl} // Use Cloudinary image URL from the backend\r\n                  alt={item.diseaseName}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          !isLoading && <p className=\"no-history\">No diagnosis history found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}